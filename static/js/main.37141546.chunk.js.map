{"version":3,"sources":["utils.js","components/FadeIn.js","components/GlslCanvas.js","components/GlslModal.js","components/Thumbnail.js","components/GalleryItem.js","components/gallery/GameOfLife.js","components/gallery/ColorAutomata.js","stats.js","App.js","loader.js","index.js"],"names":["createProgram","gl","vertexShader","fragmentShader","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","console","error","getProgramInfoLog","createShader","type","src","s","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","randomImage","_ref","min","max","width","height","buffer","i","Math","floor","random","Uint8Array","blankImage","_ref2","fill","length","createTexture","textureUnit","image","_ref3","texture","activeTexture","bindTexture","TEXTURE_2D","texImage2D","RGB","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","FadeIn","children","react_default","a","createElement","react_addons_css_transition_group_default","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","GlslCanvas","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","canvasRef","React","createRef","inherits","createClass","key","value","canvas","current","code","_this$props$display","display","glslCanvas","webglCanvas","load","style","initCanvas","_this$props$display2","_this$props$code","FadeIn_FadeIn","data-fragment","data-vertex","ref","Component","defaultProps","textures","GlslModal","apply","arguments","onClick","fullscreen","window","innerHeight","modalProps","assign","cssClasses","classNames","className","GlslCanvas_GlslCanvas","Thumbnail","imgSrc","name","alt","GalleryItem","handleClick","e","log","state","setState","active","handleMouseEnter","handleMouseLeave","_this$props","preview","full","_this$state","author","attribution","item","onMouseEnter","onMouseLeave","Thumbnail_Thumbnail","GlslModal_GlslModal","GameOfLife","_this2","img","Image","promise","Promise","resolve","reject","onload","loadImage","then","startStateImg","animate","createGameOfLife","requestAnimationFrame","step","animationFrameReq","cancelAnimationFrame","concat","imageRendering","margin","NEAREST","generateMipmap","canvasEl","getContext","VERTEX_SHADER","fragShaderDisplay","FRAGMENT_SHADER","displayShader","fragShaderStepper","stepShader","displayProg","stepperProg","useProgram","stepperProgCoordLoc","getAttribLocation","stepperProgPreviousStateLoc","getUniformLocation","displayProgStateLoc","displayProgSizeLoc","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","vertexAttribPointer","FLOAT","elementBuffer","ELEMENT_ARRAY_BUFFER","texture0","TEXTURE0","texture1","framebuffers","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","nextStateIndex","previousStateIndex","enableVertexAttribArray","uniform1i","drawElements","TRIANGLE_FAN","uniform2f","ColorAutomata","nextFrame","createColorAutomata","velocityEase","invertBounce","cohesionWeight","alignmentWeight","separationWeight","separationThreshold","velocityWeight","reqId","Automata","frameBuffers","seed","idx","push","frameBuffer","id","Error","gpgpu","options","shaderCode","uniformDefinitions","createVertexShader","coordLoc","vertexArray","mappedUniforms","_","mapValues","loc","uniforms","forOwn","toConsumableArray","isArray","updateVelocity","velocityShader","previousVelocity","alignment","cohesion","separation","size","updatePosition","positionShader","previousPosition","currentVelocity","invertVelocity","invertVelocityShader","positionTex","velocityTex","neighborAverage","neighborAverageShader","tex","separationShader","copy","copyShader","automata","time","performance","now","FullScreenAutomata","shaders","ColorAutomata_ColorAutomata","innerWidth","ColorGrid","FullScreenGliderGun","GameOfLife_GameOfLife","Gallery","Link","to","GalleryItem_GalleryItem","AppRouter","_ref4","BrowserRouter","basename","Route","path","exact","render","App_Gallery","App_ColorGrid","App_FullScreenGliderGun","App_FullScreenAutomata","makeStats","stats","Stats","shaderVariants","automataShaders","map","variant","reduce","acc","promises","frag","fetch","response","text","responseText","defineProperty","enabled","document","body","appendChild","dom","right","left","loop","update","undefined","removeChild","showFpsCounter","all","responses","utils","keys","forEach","replace","ReactDOM","App","getElementById"],"mappings":"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","file":"static/js/main.37141546.chunk.js","sourcesContent":["export const DEFAULT_VERTEX_SHADER = `\n#ifdef GL_ES\nprecision mediump float;\n#endif\nattribute vec2 a_position;\nattribute vec2 a_texcoord;\nvarying vec2 v_texcoord;\nvoid main() {\n    gl_Position = vec4(a_position, 0.0, 1.0);\n    v_texcoord = a_texcoord;\n}\n`;\n\nexport const createProgram = (gl, vertexShader, fragmentShader) => {\n  const program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n  gl.linkProgram(program);\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    console.error(\"Error linking program\", gl.getProgramInfoLog(program));\n  }\n  return program;\n};\n\nexport const createShader = (gl, type, src) => {\n  const s = gl.createShader(type);\n  gl.shaderSource(s, src);\n  gl.compileShader(s);\n  if (!gl.getShaderParameter(s, gl.COMPILE_STATUS)) {\n    console.error(\n      \"Could not compile shader\",\n      type,\n      src,\n      gl.getShaderInfoLog(s)\n    );\n  }\n  return s;\n};\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nexport const randomImage = ({ width, height }) => {\n  let buffer = [];\n  for (let i = 0; i < width * height * 3; i++) {\n    buffer[i] = randomInt(0, 255);\n  }\n  return new Uint8Array(buffer);\n};\nexport const blankImage = ({ width, height }) => {\n  let buffer = new Uint8Array(3 * width * height);\n  buffer.fill(128, 0, buffer.length);\n  return buffer;\n};\n\nexport const loadImage = src => {\n  const img = new Image();\n  const promise = new Promise((resolve, reject) => {\n    img.onload = () => {\n      resolve(img);\n    };\n  });\n  img.src = src;\n  return promise;\n};\n\nexport const createTexture = (gl, textureUnit, image, { width, height }) => {\n  const texture = gl.createTexture();\n  gl.activeTexture(textureUnit);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    0,\n    gl.RGB,\n    width,\n    height,\n    0,\n    gl.RGB,\n    gl.UNSIGNED_BYTE,\n    image\n  );\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n  // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  // gl.generateMipmap(gl.TEXTURE_2D);\n  return texture;\n};\n","import React from \"react\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\n\nexport const FadeIn = ({ children }) => (\n  <ReactCSSTransitionGroup\n    transitionName=\"fade\"\n    transitionAppear={true}\n    transitionAppearTimeout={500}\n    transitionEnter={false}\n    transitionLeave={false}\n  >\n    {children}\n  </ReactCSSTransitionGroup>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport webglCanvas from \"glslCanvas\";\n\nimport { DEFAULT_VERTEX_SHADER } from \"../utils\";\nimport { FadeIn } from \"./FadeIn\";\n\nexport class GlslCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  initCanvas() {\n    const canvas = this.canvasRef.current;\n    const { fragmentShader } = this.props.code;\n    const { width, height } = this.props.display;\n    this.glslCanvas = new webglCanvas(canvas);\n    this.glslCanvas.load(fragmentShader);\n    canvas.style.width = width;\n    canvas.style.height = height;\n  }\n\n  componentDidMount() {\n    this.initCanvas();\n  }\n\n  render() {\n    const { width, height } = this.props.display;\n    const { fragmentShader, vertexShader } = this.props.code;\n    return (\n      <FadeIn>\n        <canvas\n          width={width}\n          height={height}\n          data-fragment={fragmentShader}\n          data-vertex={vertexShader}\n          ref={this.canvasRef}\n        />\n      </FadeIn>\n    );\n  }\n}\nGlslCanvas.propTypes = {\n  code: PropTypes.shape({\n    fragmentShader: PropTypes.string.isRequired,\n    vertexShader: PropTypes.string,\n    textures: PropTypes.arrayOf(PropTypes.string)\n  })\n};\nGlslCanvas.defaultProps = {\n  code: {\n    vertexShader: DEFAULT_VERTEX_SHADER,\n    textures: []\n  }\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport { GlslCanvas } from \"./GlslCanvas\";\n\nexport class GlslModal extends React.Component {\n  render() {\n    const { onClick } = this.props;\n    const { fullscreen } = this.props.display;\n    const display = {};\n    if (fullscreen === \"square\") {\n      display.width = window.innerHeight - 100 + \"px\";\n      display.height = window.innerHeight - 100 + \"px\";\n    } else if (fullscreen === \"fill\") {\n      display.width = \"100%\";\n      display.height = \"100%\";\n    }\n    const modalProps = Object.assign({}, this.props, { display });\n    const cssClasses = classNames(\"gallery-modal\", fullscreen);\n    return (\n      <div className={cssClasses} onClick={onClick}>\n        <GlslCanvas {...modalProps} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport { FadeIn } from \"./FadeIn\";\n\nexport const Thumbnail = ({ imgSrc, name, width, height }) => (\n  <FadeIn>\n    <img src={imgSrc} alt={name} width={width} height={height} />\n  </FadeIn>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GlslCanvas } from \"./GlslCanvas\";\nimport { GlslModal } from \"./GlslModal\";\nimport { Thumbnail } from \"./Thumbnail\";\n\nexport class GalleryItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { active: false };\n  }\n\n  handleClick = e => {\n    console.log(\"click\", this.state);\n    const { fullscreen } = this.state;\n    this.setState({ fullscreen: !fullscreen, active: false });\n  };\n\n  handleMouseEnter = e => {\n    console.log(\"enter\");\n    this.setState({ active: true });\n  };\n\n  handleMouseLeave = e => {\n    console.log(\"leave\");\n    this.setState({ active: false });\n  };\n\n  render() {\n    const { name, imgSrc, preview, full } = this.props;\n    const { width, height } = this.props.display;\n    const { active, fullscreen } = this.state;\n    const { author } = this.props.attribution;\n    const item = (\n      <div\n        className=\"gallery-item\"\n        width={width}\n        height={height}\n        onClick={this.handleClick}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n      >\n        {active ? (\n          preview(this.props)\n        ) : (\n          <Thumbnail\n            imgSrc={imgSrc}\n            name={name}\n            width={width}\n            height={height}\n          />\n        )}\n        <div className=\"credits\">\n          <p className=\"author label\">{author}</p>\n          <p className=\"title label\">{name}</p>\n        </div>\n      </div>\n    );\n    return fullscreen ? (\n      <span>\n        {full(this.props, this.handleClick)}\n        {item}\n      </span>\n    ) : (\n      item\n    );\n  }\n}\n\nGalleryItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  imgSrc: PropTypes.string.isRequired,\n  display: PropTypes.shape({\n    width: PropTypes.string,\n    height: PropTypes.string,\n    fullscreen: PropTypes.oneOf([\"fill\", \"square\"])\n  }),\n  attribution: PropTypes.shape({\n    author: PropTypes.string,\n    date: PropTypes.instanceOf(Date),\n    credits: PropTypes.string,\n    link: PropTypes.string\n  })\n};\n\nGalleryItem.defaultProps = {\n  display: {\n    width: \"256px\",\n    height: \"256px\",\n    fullscreen: \"square\"\n  },\n  attribution: {},\n  preview: props => <GlslCanvas {...props} />,\n  full: (props, onClick) => <GlslModal {...props} onClick={onClick} />\n};\n","import React from \"react\";\nimport { createProgram, createShader, loadImage } from \"../../utils\";\n\nexport class GameOfLife extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { code } = this.props;\n    const canvas = this.canvasRef.current;\n    loadImage(\"/frag/game-of-life/start-state.png\").then(startStateImg => {\n      const { animate } = createGameOfLife(canvas, code, startStateImg);\n      const step = () => {\n        animate();\n        this.animationFrameReq = requestAnimationFrame(step);\n      };\n      requestAnimationFrame(step);\n    });\n  }\n\n  componentWillUnmount() {\n    console.log(\"Clearing animation frame request \", this.animationFrameReq);\n    cancelAnimationFrame(this.animationFrameReq);\n  }\n\n  render() {\n    const { fragmentShader, vertexShader } = this.props.code;\n    const { width, height } = this.props.display;\n    return (\n      <canvas\n        width=\"64\"\n        height=\"64\"\n        data-fragment={fragmentShader}\n        data-vertex={vertexShader}\n        ref={this.canvasRef}\n        style={{\n          width: `${width}`,\n          height: `${height}`,\n          imageRendering: \"pixelated\",\n          display: \"block\",\n          margin: \"auto\"\n        }}\n      />\n    );\n  }\n}\n\nconst createTexture = (gl, activeTexture, image) => {\n  const texture = gl.createTexture();\n  gl.activeTexture(activeTexture);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.generateMipmap(gl.TEXTURE_2D);\n  return texture;\n};\n\nconst createGameOfLife = (canvasEl, code, startStateImg) => {\n  const gl = canvasEl.getContext(\"webgl\");\n\n  const vertexShader = createShader(\n    gl,\n    gl.VERTEX_SHADER,\n    \"attribute vec2 coord; void main(void) { gl_Position = vec4(coord, 0.0, 1.0); }\"\n  );\n  const fragShaderDisplay = createShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    code.displayShader\n  );\n  const fragShaderStepper = createShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    code.stepShader\n  );\n\n  const displayProg = createProgram(gl, vertexShader, fragShaderDisplay);\n  const stepperProg = createProgram(gl, vertexShader, fragShaderStepper);\n\n  gl.useProgram(stepperProg);\n\n  const stepperProgCoordLoc = gl.getAttribLocation(stepperProg, \"coord\");\n  const stepperProgPreviousStateLoc = gl.getUniformLocation(\n    stepperProg,\n    \"previousState\"\n  );\n\n  const displayProgStateLoc = gl.getUniformLocation(displayProg, \"tex\");\n  const displayProgSizeLoc = gl.getUniformLocation(displayProg, \"size\");\n  const vertexBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n  gl.bufferData(\n    gl.ARRAY_BUFFER,\n    new Float32Array([-1, -1, 1, -1, 1, 1, -1, 1]),\n    gl.STATIC_DRAW\n  );\n\n  // Note we must bind ARRAY_BUFFER before running vertexAttribPointer!\n  // This is confusing and deserves a blog post\n  // https://stackoverflow.com/questions/7617668/glvertexattribpointer-needed-everytime-glbindbuffer-is-called\n  gl.vertexAttribPointer(stepperProgCoordLoc, 2, gl.FLOAT, false, 0, 0);\n\n  const elementBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n  gl.bufferData(\n    gl.ELEMENT_ARRAY_BUFFER,\n    new Uint8Array([0, 1, 2, 3]),\n    gl.STATIC_DRAW\n  );\n\n  const texture0 = createTexture(gl, gl.TEXTURE0, startStateImg);\n  const texture1 = createTexture(gl, gl.TEXTURE0 + 1, startStateImg);\n\n  const framebuffers = [gl.createFramebuffer(), gl.createFramebuffer()];\n\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffers[0]);\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER,\n    gl.COLOR_ATTACHMENT0,\n    gl.TEXTURE_2D,\n    texture0,\n    0\n  );\n\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffers[1]);\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER,\n    gl.COLOR_ATTACHMENT0,\n    gl.TEXTURE_2D,\n    texture1,\n    0\n  );\n\n  let nextStateIndex = 0;\n  const animate = function animate() {\n    const previousStateIndex = 1 - nextStateIndex;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffers[nextStateIndex]);\n    gl.useProgram(stepperProg);\n    gl.enableVertexAttribArray(stepperProgCoordLoc);\n    gl.uniform1i(stepperProgPreviousStateLoc, previousStateIndex);\n    gl.drawElements(gl.TRIANGLE_FAN, 4, gl.UNSIGNED_BYTE, 0);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.useProgram(displayProg);\n    gl.uniform1i(displayProgStateLoc, nextStateIndex);\n    gl.uniform2f(displayProgSizeLoc, gl.canvas.width, gl.canvas.height);\n    gl.drawElements(gl.TRIANGLE_FAN, 4, gl.UNSIGNED_BYTE, 0);\n\n    nextStateIndex = previousStateIndex;\n  };\n  return { animate };\n};\n","import React from \"react\";\nimport _ from \"lodash\";\n\nimport {\n  createProgram,\n  createShader,\n  createTexture,\n  randomImage,\n  blankImage\n} from \"../../utils\";\n\nexport class ColorAutomata extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { code } = this.props;\n    const { nextFrame } = createColorAutomata(\n      this.canvasRef.current,\n      code,\n      this.props\n    );\n    const step = () => {\n      // console.time(\"step\");\n      nextFrame();\n      this.animationFrameReq = requestAnimationFrame(step);\n      // console.timeEnd(\"step\");\n    };\n    requestAnimationFrame(step);\n  }\n\n  componentWillUnmount() {\n    // console.log(\"Clearing animation frame request \", this.animationFrameReq);\n    cancelAnimationFrame(this.animationFrameReq);\n  }\n\n  render() {\n    const { width, height } = this.props;\n    return (\n      <canvas\n        width={width}\n        height={height}\n        ref={this.canvasRef}\n        style={{ width: `${width}px`, height: `${height}px` }}\n      />\n    );\n  }\n}\n\nColorAutomata.defaultProps = {\n  width: 256,\n  height: 256,\n  velocityEase: 0.16,\n  invertBounce: 1,\n  cohesionWeight: 1.6,\n  alignmentWeight: 0.8,\n  separationWeight: 4,\n  separationThreshold: 1 / 16,\n  velocityWeight: 0.98\n};\n\nclass Automata {\n  constructor(gl, { width, height }) {\n    this.active = 1;\n    this.frameBuffers = [];\n    const seed = randomImage({ width, height });\n    for (let idx = 0; idx < 8; idx++) {\n      const image = idx <= 1 ? seed : blankImage({ width, height });\n      const texture = createTexture(gl, gl[`TEXTURE${idx}`], image, {\n        width,\n        height\n      });\n      const buffer = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, buffer);\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        texture,\n        0\n      );\n      this.frameBuffers.push({ textureUnit: idx, frameBuffer: buffer });\n    }\n  }\n\n  swap() {\n    this.active = 1 - this.active;\n  }\n\n  textureUnit(id) {\n    switch (id) {\n      case \"colorBuffer\":\n        return 0;\n      case \"colorPrimary\":\n        return 1;\n      case \"velocityBuffer\":\n        return 2;\n      case \"velocityPrimary\":\n        return 3;\n      case \"cohesion\":\n        return 4;\n      case \"alignment\":\n        return 5;\n      case \"separation\":\n        return 6;\n      case \"aux\":\n        return 7;\n      default:\n        throw new Error(\"id not recognized\");\n    }\n  }\n\n  frameBuffer(id) {\n    return this.frameBuffers[this.textureUnit(id)].frameBuffer;\n  }\n}\n\nconst createVertexShader = gl => {\n  return createShader(\n    gl,\n    gl.VERTEX_SHADER,\n    \"attribute vec2 coord; void main(void) { gl_Position = vec4(coord, 0.0, 1.0); }\"\n  );\n};\n\nconst toArray = value => (_.isArray(value) ? value : [value]);\nconst gpgpu = (gl, options) => {\n  const { shaderCode, uniformDefinitions } = options;\n  const vertexShader = createVertexShader(gl);\n  const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, shaderCode);\n  const program = createProgram(gl, vertexShader, fragmentShader);\n  const coordLoc = gl.getAttribLocation(program, \"coord\");\n\n  const vertexBuffer = gl.createBuffer();\n  const vertexArray = new Float32Array([-1, -1, 1, -1, 1, 1, -1, 1]);\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n  // gl.bufferData(gl.ARRAY_BUFFER, vertexArray, gl.STATIC_DRAW);\n  gl.bufferData(gl.ARRAY_BUFFER, vertexArray, gl.STATIC_DRAW);\n\n  // Note we must bind ARRAY_BUFFER before running vertexAttribPointer!\n  // This is confusing and deserves a blog post\n  // https://stackoverflow.com/questions/7617668/glvertexattribpointer-needed-everytime-glbindbuffer-is-called\n  gl.vertexAttribPointer(coordLoc, 2, gl.FLOAT, false, 0, 0);\n\n  const elementBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n  gl.bufferData(\n    gl.ELEMENT_ARRAY_BUFFER,\n    new Uint8Array([0, 1, 2, 3]),\n    gl.STATIC_DRAW\n  );\n\n  const mappedUniforms = _.mapValues(uniformDefinitions, (props, name) =>\n    Object.assign(props, { loc: gl.getUniformLocation(program, name) })\n  );\n\n  return (frameBuffer, uniforms) => {\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    gl.useProgram(program);\n    gl.enableVertexAttribArray(coordLoc);\n    _.forOwn(mappedUniforms, (props, name) => {\n      gl[props.type](props.loc, ...toArray(uniforms[name]));\n    });\n    gl.drawElements(gl.TRIANGLE_FAN, 4, gl.UNSIGNED_BYTE, 0);\n  };\n};\n\nconst createColorAutomata = (canvasEl, code, options) => {\n  const gl = canvasEl.getContext(\"webgl\");\n  const { width, height } = options;\n  const updateVelocity = gpgpu(gl, {\n    shaderCode: code.velocityShader,\n    uniformDefinitions: {\n      previousVelocity: { type: \"uniform1i\" },\n      alignment: { type: \"uniform1i\" },\n      cohesion: { type: \"uniform1i\" },\n      separation: { type: \"uniform1i\" },\n      size: { type: \"uniform2f\" },\n      velocityWeight: { type: \"uniform1f\" },\n      alignmentWeight: { type: \"uniform1f\" },\n      cohesionWeight: { type: \"uniform1f\" },\n      separationWeight: { type: \"uniform1f\" },\n      velocityEase: { type: \"uniform1f\" }\n    }\n  });\n\n  const updatePosition = gpgpu(gl, {\n    shaderCode: code.positionShader,\n    uniformDefinitions: {\n      previousPosition: { type: \"uniform1i\" },\n      currentVelocity: { type: \"uniform1i\" },\n      size: { type: \"uniform2f\" }\n    }\n  });\n\n  const invertVelocity = gpgpu(gl, {\n    shaderCode: code.invertVelocityShader,\n    uniformDefinitions: {\n      positionTex: { type: \"uniform1i\" },\n      velocityTex: { type: \"uniform1i\" },\n      size: { type: \"uniform2f\" },\n      invertBounce: { type: \"uniform1f\" }\n    }\n  });\n\n  const neighborAverage = gpgpu(gl, {\n    shaderCode: code.neighborAverageShader,\n    uniformDefinitions: {\n      tex: { type: \"uniform1i\" },\n      size: { type: \"uniform2f\" }\n    }\n  });\n\n  const separation = gpgpu(gl, {\n    shaderCode: code.separationShader,\n    uniformDefinitions: {\n      tex: { type: \"uniform1i\" },\n      size: { type: \"uniform2f\" },\n      separationThreshold: { type: \"uniform1f\" }\n    }\n  });\n\n  const copy = gpgpu(gl, {\n    shaderCode: code.copyShader,\n    uniformDefinitions: {\n      tex: { type: \"uniform1i\" },\n      size: { type: \"uniform2f\" }\n    }\n  });\n\n  const display = gpgpu(gl, {\n    shaderCode: code.displayShader,\n    uniformDefinitions: {\n      tex: { type: \"uniform1i\" },\n      size: { type: \"uniform2f\" }\n    }\n  });\n\n  const automata = new Automata(gl, { width, height });\n  const {\n    invertBounce,\n    separationThreshold,\n    alignmentWeight,\n    cohesionWeight,\n    separationWeight,\n    velocityEase,\n    velocityWeight\n  } = options;\n  console.log(options);\n  const nextFrame = function() {\n    neighborAverage(automata.frameBuffer(\"cohesion\"), {\n      tex: [automata.textureUnit(\"colorPrimary\")],\n      size: [gl.canvas.width, gl.canvas.height]\n    });\n\n    neighborAverage(automata.frameBuffer(\"alignment\"), {\n      tex: [automata.textureUnit(\"velocityPrimary\")],\n      size: [gl.canvas.width, gl.canvas.height]\n    });\n\n    separation(automata.frameBuffer(\"separation\"), {\n      tex: [automata.textureUnit(\"colorPrimary\")],\n      size: [gl.canvas.width, gl.canvas.height],\n      separationThreshold\n    });\n\n    updateVelocity(automata.frameBuffer(\"velocityBuffer\"), {\n      previousVelocity: [automata.textureUnit(\"velocityPrimary\")],\n      alignment: [automata.textureUnit(\"alignment\")],\n      cohesion: [automata.textureUnit(\"cohesion\")],\n      separation: [automata.textureUnit(\"separation\")],\n      size: [gl.canvas.width, gl.canvas.height],\n      time: [performance.now() / 1000],\n      alignmentWeight,\n      separationWeight,\n      cohesionWeight,\n      velocityEase,\n      velocityWeight\n    });\n\n    invertVelocity(automata.frameBuffer(\"aux\"), {\n      positionTex: [automata.textureUnit(\"colorBuffer\")],\n      velocityTex: [automata.textureUnit(\"velocityBuffer\")],\n      size: [gl.canvas.width, gl.canvas.height],\n      invertBounce\n    });\n\n    copy(automata.frameBuffer(\"velocityBuffer\"), {\n      tex: [automata.textureUnit(\"aux\")],\n      size: [gl.canvas.width, gl.canvas.height]\n    });\n\n    updatePosition(automata.frameBuffer(\"aux\"), {\n      previousPosition: [automata.textureUnit(\"colorBuffer\")],\n      currentVelocity: [automata.textureUnit(\"velocityBuffer\")],\n      size: [gl.canvas.width, gl.canvas.height]\n    });\n\n    copy(automata.frameBuffer(\"colorBuffer\"), {\n      tex: [automata.textureUnit(\"aux\")],\n      size: [gl.canvas.width, gl.canvas.height]\n    });\n\n    copy(automata.frameBuffer(\"velocityPrimary\"), {\n      tex: [automata.textureUnit(\"velocityBuffer\")],\n      size: [gl.canvas.width, gl.canvas.height]\n    });\n\n    copy(automata.frameBuffer(\"colorPrimary\"), {\n      tex: [automata.textureUnit(\"colorBuffer\")],\n      size: [gl.canvas.width, gl.canvas.height]\n    });\n\n    display(null, {\n      tex: [automata.textureUnit(\"colorPrimary\")],\n      size: [gl.canvas.width, gl.canvas.height]\n    });\n  };\n  return { automata, nextFrame };\n};\n","import Stats from \"stats.js\";\n\nfunction makeStats() {\n  // poor man's run once\n  if (makeStats.stats) return makeStats.stats;\n  makeStats.stats = new Stats();\n  return makeStats.stats;\n}\n\nlet reqId;\nexport const showFpsCounter = enabled => {\n  const stats = makeStats();\n  if (enabled && !reqId) {\n    document.body.appendChild(stats.dom);\n    stats.dom.style.right = 0;\n    stats.dom.style.left = null;\n    reqId = requestAnimationFrame(function loop() {\n      stats.update();\n      reqId = requestAnimationFrame(loop);\n    });\n  } else if (!enabled && reqId) {\n    cancelAnimationFrame(reqId);\n    reqId = undefined;\n    document.body.removeChild(stats.dom);\n  }\n};\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { GalleryItem } from \"./components/GalleryItem\";\nimport { GlslModal } from \"./components/GlslModal\";\nimport { GameOfLife } from \"./components/gallery/GameOfLife\";\nimport { ColorAutomata } from \"./components/gallery/ColorAutomata\";\n\nconst FullScreenAutomata = ({ shaders }) => (\n  <ColorAutomata\n    name=\"Color Automata (WIP)\"\n    imgSrc=\"./frag/color-automata/color-automata.png\"\n    code={{\n      copyShader: shaders[\"frag/copy.frag\"],\n      displayShader: shaders[\"frag/display.frag\"],\n      velocityShader: shaders[\"frag/color-automata/velocity.frag\"],\n      positionShader: shaders[\"frag/color-automata/position.frag\"],\n      invertVelocityShader: shaders[\"frag/color-automata/invert-velocity.frag\"],\n      neighborAverageShader:\n        shaders[\"frag/color-automata/neighbor-average.frag\"],\n      separationShader: shaders[\"frag/color-automata/separation.frag\"]\n    }}\n    width={window.innerWidth}\n    height={window.innerHeight}\n  />\n);\n\nconst ColorGrid = ({ shaders }) => (\n  <GlslModal\n    name=\"256 colors\"\n    imgSrc=\"./frag/256-colors.png\"\n    display={{ fullscreen: \"square\" }}\n    code={{ fragmentShader: shaders[\"frag/256-colors.frag\"] }}\n    onClick={() => null}\n  />\n);\n\nconst FullScreenGliderGun = ({ shaders }) => (\n  <GameOfLife\n    display={{\n      width: `${window.innerHeight}px`,\n      height: `${window.innerHeight}px`\n    }}\n    code={{\n      displayShader: shaders[\"frag/display.frag\"],\n      stepShader: shaders[\"frag/game-of-life/game-of-life.frag\"]\n    }}\n  />\n);\n\nclass Gallery extends Component {\n  render() {\n    const { shaders } = this.props;\n    return (\n      <div>\n        <Link to=\"/256-colors\">\n          <GalleryItem\n            name=\"256 colors\"\n            imgSrc=\"/frag/256-colors.png\"\n            code={{ fragmentShader: shaders[\"frag/256-colors.frag\"] }}\n          />\n        </Link>\n        <Link to=\"/glider-gun\">\n          <GalleryItem\n            name=\"Glider gun\"\n            imgSrc=\"/frag/game-of-life/glider-gun.png\"\n            code={{\n              displayShader: shaders[\"frag/display.frag\"],\n              stepShader: shaders[\"frag/game-of-life/game-of-life.frag\"]\n            }}\n            preview={props => <GameOfLife {...props} />}\n            full={() => null}\n          />\n        </Link>\n        <Link to=\"/color-automata\">\n          <GalleryItem\n            name=\"Color Automata\"\n            imgSrc=\"/frag/color-automata/color-automata.png\"\n            code={{\n              copyShader: shaders[\"frag/copy.frag\"],\n              displayShader: shaders[\"frag/display.frag\"],\n              velocityShader: shaders[\"frag/color-automata/velocity.frag\"],\n              positionShader: shaders[\"frag/color-automata/position.frag\"],\n              invertVelocityShader:\n                shaders[\"frag/color-automata/invert-velocity.frag\"],\n              neighborAverageShader:\n                shaders[\"frag/color-automata/neighbor-average.frag\"],\n              separationShader: shaders[\"frag/color-automata/separation.frag\"]\n            }}\n            preview={props => <ColorAutomata {...props} />}\n            full={() => null}\n          />\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst AppRouter = ({ shaders }) => (\n  <Router basename={\"/shaders\"}>\n    <div>\n      <Route path=\"/\" exact render={() => <Gallery shaders={shaders} />} />\n      <Route\n        path=\"/256-colors/\"\n        render={() => <ColorGrid shaders={shaders} />}\n      />\n      <Route\n        path=\"/glider-gun/\"\n        render={() => <FullScreenGliderGun shaders={shaders} />}\n      />\n      <Route\n        path=\"/color-automata/\"\n        render={() => <FullScreenAutomata shaders={shaders} />}\n      />\n    </div>\n  </Router>\n);\n\nexport default AppRouter;\n","const automata = [\"frag/color-automata/\"];\nconst shaderVariants = [\n  \"velocity\",\n  \"position\",\n  \"invert-velocity\",\n  \"neighbor-average\",\n  \"separation\",\n  \"utils\"\n];\nconst automataShaders = automata\n  .map(path => shaderVariants.map(variant => `${path}${variant}.frag`))\n  .reduce((acc, shaders) => acc.concat(shaders), []);\n\nconst promises = [\n  \"frag/256-colors.frag\",\n  \"frag/display.frag\",\n  \"frag/copy.frag\",\n  \"frag/game-of-life/game-of-life.frag\"\n]\n  .concat(automataShaders)\n  .map(frag =>\n    fetch(\"/\" + frag)\n      .then(response => response.text())\n      .then(responseText => ({ [frag]: responseText }))\n  );\n\nexport const loadShaders = function loadShaders() {\n  return Promise.all(promises)\n    .then(responses => Object.assign({}, ...responses))\n    .then(shaders => {\n      const utils = shaders[\"frag/color-automata/utils.frag\"];\n      Object.keys(shaders).forEach(name => {\n        shaders[name] = shaders[name].replace(\"// include utils.frag\", utils);\n      });\n      return shaders;\n    });\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport { showFpsCounter } from \"./stats\";\nimport { loadShaders } from \"./loader\";\n\nshowFpsCounter(true);\n\nloadShaders().then(shaders => {\n  ReactDOM.render(<App shaders={shaders} />, document.getElementById(\"root\"));\n});\n"],"sourceRoot":""}