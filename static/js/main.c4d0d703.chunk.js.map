{"version":3,"sources":["utils.js","components/FadeIn.js","components/GlslCanvas.js","components/GlslModal.js","components/Thumbnail.js","components/GalleryItem.js","components/gallery/GameOfLife.js","components/gallery/ColorAutomata.js","components/gallery/randoms/MazeFill.js","stats.js","App.js","index.js"],"names":["createProgram","gl","vertexShader","fragmentShader","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","console","error","getProgramInfoLog","createShader","type","src","s","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","randomImage","_ref","min","max","width","height","buffer","i","Math","floor","random","Uint8Array","blankImage","_ref2","fill","length","createTexture","textureUnit","image","_ref3","texture","activeTexture","bindTexture","TEXTURE_2D","texImage2D","RGB","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","generateMipmap","FadeIn","children","react_default","a","createElement","react_addons_css_transition_group_default","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","GlslCanvas","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","canvasRef","React","createRef","inherits","createClass","key","value","canvas","current","code","_this$props$display","display","glslCanvas","webglCanvas","load","style","initCanvas","_this$props$display2","_this$props$code","FadeIn_FadeIn","data-fragment","data-vertex","ref","Component","defaultProps","textures","GlslModal","apply","arguments","onClick","fullscreen","window","innerHeight","modalProps","assign","cssClasses","classNames","className","GlslCanvas_GlslCanvas","Thumbnail","imgSrc","name","alt","GalleryItem","handleClick","e","log","state","setState","active","handleMouseEnter","handleMouseLeave","_this$props","preview","full","_this$state","author","attribution","item","onMouseEnter","onMouseLeave","Thumbnail_Thumbnail","GlslModal_GlslModal","GameOfLife","_this2","img","Image","promise","Promise","resolve","reject","onload","loadImage","then","startStateImg","animate","createGameOfLife","requestAnimationFrame","step","time","animationFrameReq","timeEnd","cancelAnimationFrame","imageRendering","canvasEl","getContext","VERTEX_SHADER","fragShaderDisplay","FRAGMENT_SHADER","displayShader","fragShaderStepper","stepShader","displayProg","stepperProg","useProgram","stepperProgCoordLoc","getAttribLocation","stepperProgPreviousStateLoc","getUniformLocation","displayProgStateLoc","displayProgSizeLoc","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","vertexAttribPointer","FLOAT","elementBuffer","ELEMENT_ARRAY_BUFFER","texture0","TEXTURE0","texture1","framebuffers","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","nextStateIndex","previousStateIndex","enableVertexAttribArray","uniform1i","drawElements","TRIANGLE_FAN","uniform2f","ColorAutomata","nextFrame","createColorAutomata","_this$props2","concat","Automata","buffers","seed","idx","push","position","slice","velocity","displayFragShader","velocityFragShader","velocityShader","positionFragShader","positionShader","velocityProg","positionProg","velocityProgCoordLoc","positionProgCoordLoc","velocityUniforms","positionUniforms","displayUniforms","automata","velocityFrameBuffer","prevPositionTextureUnit","prevVelocityTextureUnit","uniform1f","performance","now","positionFrameBuffer","nextVelocityTextureUnit","nextPositionTextureUnit","swap","randomInt","reqId","j","setInterval","App","shaders","GalleryItem_GalleryItem","GameOfLife_GameOfLife","ColorAutomata_ColorAutomata","makeStats","stats","Stats","shaderVariants","automataShaders","map","path","variant","reduce","acc","promises","frag","fetch","response","text","responseText","defineProperty","enabled","document","body","appendChild","dom","right","left","loop","update","undefined","removeChild","showFpsCounter","all","ReactDOM","render","src_App","toConsumableArray","getElementById"],"mappings":"yQAaaA,EAAgB,SAACC,EAAIC,EAAcC,GAC9C,IAAMC,EAAUH,EAAGD,gBAOnB,OANAC,EAAGI,aAAaD,EAASF,GACzBD,EAAGI,aAAaD,EAASD,GACzBF,EAAGK,YAAYF,GACVH,EAAGM,oBAAoBH,EAASH,EAAGO,cACtCC,QAAQC,MAAM,wBAAyBT,EAAGU,kBAAkBP,IAEvDA,GAGIQ,EAAe,SAACX,EAAIY,EAAMC,GACrC,IAAMC,EAAId,EAAGW,aAAaC,GAW1B,OAVAZ,EAAGe,aAAaD,EAAGD,GACnBb,EAAGgB,cAAcF,GACZd,EAAGiB,mBAAmBH,EAAGd,EAAGkB,iBAC/BV,QAAQC,MACN,2BACAG,EACAC,EACAb,EAAGmB,iBAAiBL,IAGjBA,GAMF,IAAMM,EAAc,SAAAC,GAEzB,IAFgD,IAH/BC,EAAKC,EAGMC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,OAC/BC,EAAS,GACJC,EAAI,EAAGA,EAAIH,EAAQC,EAAS,EAAGE,IACtCD,EAAOC,IANQL,EAMO,EANFC,EAMK,IALpBK,KAAKC,MAAMD,KAAKE,UAAYP,EAAMD,EAAM,IAAMA,GAOrD,OAAO,IAAIS,WAAWL,IAEXM,EAAa,SAAAC,GAAuB,IAApBT,EAAoBS,EAApBT,MAAOC,EAAaQ,EAAbR,OAC9BC,EAAS,IAAIK,WAAW,EAAIP,EAAQC,GAExC,OADAC,EAAOQ,KAAK,EAAG,EAAGR,EAAOS,QAClBT,GAcIU,EAAgB,SAACpC,EAAIqC,EAAaC,EAAlBC,GAA+C,IAApBf,EAAoBe,EAApBf,MAAOC,EAAac,EAAbd,OACvDe,EAAUxC,EAAGoC,gBAiBnB,OAhBApC,EAAGyC,cAAcJ,GACjBrC,EAAG0C,YAAY1C,EAAG2C,WAAYH,GAC9BxC,EAAG4C,WACD5C,EAAG2C,WACH,EACA3C,EAAG6C,IACHrB,EACAC,EACA,EACAzB,EAAG6C,IACH7C,EAAG8C,cACHR,GAEFtC,EAAG+C,cAAc/C,EAAG2C,WAAY3C,EAAGgD,mBAAoBhD,EAAGiD,SAC1DjD,EAAG+C,cAAc/C,EAAG2C,WAAY3C,EAAGkD,mBAAoBlD,EAAGiD,SAC1DjD,EAAGmD,eAAenD,EAAG2C,YACdH,oBCjFIY,EAAS,SAAA/B,GAAA,IAAGgC,EAAHhC,EAAGgC,SAAH,OACpBC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,eAAe,OACfC,kBAAkB,EAClBC,wBAAyB,IACzBC,iBAAiB,EACjBC,iBAAiB,GAEhBT,ICJQU,EAAb,SAAAC,GACE,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACjBG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KAEDQ,UAAYC,IAAMC,YAHNT,EADrB,OAAAC,OAAAS,EAAA,EAAAT,CAAAJ,EAAAC,GAAAG,OAAAU,EAAA,EAAAV,CAAAJ,EAAA,EAAAe,IAAA,aAAAC,MAAA,WAQI,IAAMC,EAASX,KAAKI,UAAUQ,QACtB/E,EAAmBmE,KAAKJ,MAAMiB,KAA9BhF,eAFGiF,EAGed,KAAKJ,MAAMmB,QAA7B5D,EAHG2D,EAGH3D,MAAOC,EAHJ0D,EAGI1D,OACf4C,KAAKgB,WAAa,IAAIC,IAAYN,GAClCX,KAAKgB,WAAWE,KAAKrF,GACrB8E,EAAOQ,MAAMhE,MAAQA,EACrBwD,EAAOQ,MAAM/D,OAASA,IAd1B,CAAAqD,IAAA,oBAAAC,MAAA,WAkBIV,KAAKoB,eAlBT,CAAAX,IAAA,SAAAC,MAAA,WAqBW,IAAAW,EACmBrB,KAAKJ,MAAMmB,QAA7B5D,EADDkE,EACClE,MAAOC,EADRiE,EACQjE,OADRkE,EAEkCtB,KAAKJ,MAAMiB,KAA5ChF,EAFDyF,EAECzF,eAAgBD,EAFjB0F,EAEiB1F,aACxB,OACEqD,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAAA,UACEhC,MAAOA,EACPC,OAAQA,EACRoE,gBAAe3F,EACf4F,cAAa7F,EACb8F,IAAK1B,KAAKI,iBA/BpBV,EAAA,CAAgCW,IAAMsB,WA4CtCjC,EAAWkC,aAAe,CACxBf,KAAM,CACJjF,aFrD8B,sOEsD9BiG,SAAU,0BCjDDC,EAAb,SAAAnC,GAAA,SAAAmC,IAAA,OAAAhC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8B,GAAAhC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgC,GAAAC,MAAA/B,KAAAgC,YAAA,OAAAlC,OAAAS,EAAA,EAAAT,CAAAgC,EAAAnC,GAAAG,OAAAU,EAAA,EAAAV,CAAAgC,EAAA,EAAArB,IAAA,SAAAC,MAAA,WACW,IACCuB,EAAYjC,KAAKJ,MAAjBqC,QACAC,EAAelC,KAAKJ,MAAMmB,QAA1BmB,WACFnB,EAAU,GACG,WAAfmB,GACFnB,EAAQ5D,MAAQgF,OAAOC,YAAc,IAAM,KAC3CrB,EAAQ3D,OAAS+E,OAAOC,YAAc,IAAM,MACpB,SAAfF,IACTnB,EAAQ5D,MAAQ,OAChB4D,EAAQ3D,OAAS,QAEnB,IAAMiF,EAAavC,OAAOwC,OAAO,GAAItC,KAAKJ,MAAO,CAAEmB,YAC7CwB,EAAaC,IAAW,gBAAiBN,GAC/C,OACEjD,EAAAC,EAAAC,cAAA,OAAKsD,UAAWF,EAAYN,QAASA,GACnChD,EAAAC,EAAAC,cAACuD,EAAeL,QAhBxBP,EAAA,CAA+BzB,IAAMsB,WCDxBgB,EAAY,SAAA3F,GAAA,IAAG4F,EAAH5F,EAAG4F,OAAQC,EAAX7F,EAAW6F,KAAM1F,EAAjBH,EAAiBG,MAAOC,EAAxBJ,EAAwBI,OAAxB,OACvB6B,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAAA,OAAK3C,IAAKoG,EAAQE,IAAKD,EAAM1F,MAAOA,EAAOC,OAAQA,MCA1C2F,EAAb,SAAApD,GACE,SAAAoD,EAAYnD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+C,IACjBlD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiD,GAAA5C,KAAAH,KAAMJ,KAKRoD,YAAc,SAAAC,GACZ9G,QAAQ+G,IAAI,QAASrD,EAAKsD,OADT,IAETjB,EAAerC,EAAKsD,MAApBjB,WACRrC,EAAKuD,SAAS,CAAElB,YAAaA,EAAYmB,QAAQ,KAThCxD,EAYnByD,iBAAmB,SAAAL,GACjB9G,QAAQ+G,IAAI,SACZrD,EAAKuD,SAAS,CAAEC,QAAQ,KAdPxD,EAiBnB0D,iBAAmB,SAAAN,GACjB9G,QAAQ+G,IAAI,SACZrD,EAAKuD,SAAS,CAAEC,QAAQ,KAhBxBxD,EAAKsD,MAAQ,CAAEE,QAAQ,GAHNxD,EADrB,OAAAC,OAAAS,EAAA,EAAAT,CAAAiD,EAAApD,GAAAG,OAAAU,EAAA,EAAAV,CAAAiD,EAAA,EAAAtC,IAAA,SAAAC,MAAA,WAuBW,IAAA8C,EACiCxD,KAAKJ,MAArCiD,EADDW,EACCX,KAAMD,EADPY,EACOZ,OAAQa,EADfD,EACeC,QAASC,EADxBF,EACwBE,KADxB5C,EAEmBd,KAAKJ,MAAMmB,QAA7B5D,EAFD2D,EAEC3D,MAAOC,EAFR0D,EAEQ1D,OAFRuG,EAGwB3D,KAAKmD,MAA5BE,EAHDM,EAGCN,OAAQnB,EAHTyB,EAGSzB,WACR0B,EAAW5D,KAAKJ,MAAMiE,YAAtBD,OACFE,EACJ7E,EAAAC,EAAAC,cAAA,OACEsD,UAAU,eACVtF,MAAOA,EACPC,OAAQA,EACR6E,QAASjC,KAAKgD,YACde,aAAc/D,KAAKsD,iBACnBU,aAAchE,KAAKuD,kBAElBF,EACCI,EAAQzD,KAAKJ,OAEbX,EAAAC,EAAAC,cAAC8E,EAAD,CACErB,OAAQA,EACRC,KAAMA,EACN1F,MAAOA,EACPC,OAAQA,IAGZ6B,EAAAC,EAAAC,cAAA,OAAKsD,UAAU,WACbxD,EAAAC,EAAAC,cAAA,KAAGsD,UAAU,gBAAgBmB,GAC7B3E,EAAAC,EAAAC,cAAA,KAAGsD,UAAU,eAAeI,KAIlC,OAAOX,EACLjD,EAAAC,EAAAC,cAAA,YACGuE,EAAK1D,KAAKJ,MAAOI,KAAKgD,aACtBc,GAGHA,MA3DNf,EAAA,CAAiC1C,IAAMsB,WAgFvCoB,EAAYnB,aAAe,CACzBb,QAAS,CACP5D,MAAO,QACPC,OAAQ,QACR8E,WAAY,UAEd2B,YAAa,GACbJ,QAAS,SAAA7D,GAAK,OAAIX,EAAAC,EAAAC,cAACuD,EAAe9C,IAClC8D,KAAM,SAAC9D,EAAOqC,GAAR,OAAoBhD,EAAAC,EAAAC,cAAC+E,EAADpE,OAAAwC,OAAA,GAAe1C,EAAf,CAAsBqC,QAASA,OC3FpD,IAAMkC,EAAb,SAAAxE,GACE,SAAAwE,EAAYvE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmE,IACjBtE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqE,GAAAhE,KAAAH,KAAMJ,KAEDQ,UAAYC,IAAMC,YAHNT,EADrB,OAAAC,OAAAS,EAAA,EAAAT,CAAAqE,EAAAxE,GAAAG,OAAAU,EAAA,EAAAV,CAAAqE,EAAA,EAAA1D,IAAA,oBAAAC,MAAA,WAOsB,IAAA0D,EAAApE,KACVa,EAASb,KAAKJ,MAAdiB,KACFF,EAASX,KAAKI,UAAUQ,SN2CT,SAAApE,GACvB,IAAM6H,EAAM,IAAIC,MACVC,EAAU,IAAIC,QAAQ,SAACC,EAASC,GACpCL,EAAIM,OAAS,WACXF,EAAQJ,MAIZ,OADAA,EAAI7H,IAAMA,EACH+H,GMlDLK,CAAU,qCAAqCC,KAAK,SAAAC,GAAiB,IAC3DC,EAAYC,EAAiBrE,EAAQE,EAAMiE,GAA3CC,QAORE,sBANa,SAAPC,IACJ/I,QAAQgJ,KAAK,QACbJ,IACAX,EAAKgB,kBAAoBH,sBAAsBC,GAC/C/I,QAAQkJ,QAAQ,cAhBxB,CAAA5E,IAAA,uBAAAC,MAAA,WAuBIvE,QAAQ+G,IAAI,oCAAqClD,KAAKoF,mBACtDE,qBAAqBtF,KAAKoF,qBAxB9B,CAAA3E,IAAA,SAAAC,MAAA,WA2BW,IAAAY,EACkCtB,KAAKJ,MAAMiB,KAA5ChF,EADDyF,EACCzF,eAAgBD,EADjB0F,EACiB1F,aACxB,OACEqD,EAAAC,EAAAC,cAAA,UACEhC,MAAM,KACNC,OAAO,KACPoE,gBAAe3F,EACf4F,cAAa7F,EACb8F,IAAK1B,KAAKI,UACVe,MAAO,CAAEhE,MAAO,QAASC,OAAQ,QAASmI,eAAgB,mBApClEpB,EAAA,CAAgC9D,IAAMsB,WA0ChC5D,EAAgB,SAACpC,EAAIyC,EAAeH,GACxC,IAAME,EAAUxC,EAAGoC,gBAOnB,OANApC,EAAGyC,cAAcA,GACjBzC,EAAG0C,YAAY1C,EAAG2C,WAAYH,GAC9BxC,EAAG4C,WAAW5C,EAAG2C,WAAY,EAAG3C,EAAG6C,IAAK7C,EAAG6C,IAAK7C,EAAG8C,cAAeR,GAClEtC,EAAG+C,cAAc/C,EAAG2C,WAAY3C,EAAGgD,mBAAoBhD,EAAGiD,SAC1DjD,EAAG+C,cAAc/C,EAAG2C,WAAY3C,EAAGkD,mBAAoBlD,EAAGiD,SAC1DjD,EAAGmD,eAAenD,EAAG2C,YACdH,GAGH6G,EAAmB,SAACQ,EAAU3E,EAAMiE,GACxC,IAAMnJ,EAAK6J,EAASC,WAAW,SAEzB7J,EAAeU,EACnBX,EACAA,EAAG+J,cACH,kFAEIC,EAAoBrJ,EACxBX,EACAA,EAAGiK,gBACH/E,EAAKgF,eAEDC,EAAoBxJ,EACxBX,EACAA,EAAGiK,gBACH/E,EAAKkF,YAGDC,EAActK,EAAcC,EAAIC,EAAc+J,GAC9CM,EAAcvK,EAAcC,EAAIC,EAAckK,GAEpDnK,EAAGuK,WAAWD,GAEd,IAAME,EAAsBxK,EAAGyK,kBAAkBH,EAAa,SACxDI,EAA8B1K,EAAG2K,mBACrCL,EACA,iBAGIM,EAAsB5K,EAAG2K,mBAAmBN,EAAa,SACzDQ,EAAqB7K,EAAG2K,mBAAmBN,EAAa,QACxDS,EAAe9K,EAAG+K,eACxB/K,EAAGgL,WAAWhL,EAAGiL,aAAcH,GAC/B9K,EAAGkL,WACDlL,EAAGiL,aACH,IAAIE,aAAa,EAAE,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,IAC3CnL,EAAGoL,aAMLpL,EAAGqL,oBAAoBb,EAAqB,EAAGxK,EAAGsL,OAAO,EAAO,EAAG,GAEnE,IAAMC,EAAgBvL,EAAG+K,eACzB/K,EAAGgL,WAAWhL,EAAGwL,qBAAsBD,GACvCvL,EAAGkL,WACDlL,EAAGwL,qBACH,IAAIzJ,WAAW,CAAC,EAAG,EAAG,EAAG,IACzB/B,EAAGoL,aAGL,IAAMK,EAAWrJ,EAAcpC,EAAIA,EAAG0L,SAAUvC,GAC1CwC,EAAWvJ,EAAcpC,EAAIA,EAAG0L,SAAW,EAAGvC,GAE9CyC,EAAe,CAAC5L,EAAG6L,oBAAqB7L,EAAG6L,qBAEjD7L,EAAG8L,gBAAgB9L,EAAG+L,YAAaH,EAAa,IAChD5L,EAAGgM,qBACDhM,EAAG+L,YACH/L,EAAGiM,kBACHjM,EAAG2C,WACH8I,EACA,GAGFzL,EAAG8L,gBAAgB9L,EAAG+L,YAAaH,EAAa,IAChD5L,EAAGgM,qBACDhM,EAAG+L,YACH/L,EAAGiM,kBACHjM,EAAG2C,WACHgJ,EACA,GAGF,IAAIO,EAAiB,EAiBrB,MAAO,CAAE9C,QAhBO,WACd,IAAM+C,EAAqB,EAAID,EAC/BlM,EAAG8L,gBAAgB9L,EAAG+L,YAAaH,EAAaM,IAChDlM,EAAGuK,WAAWD,GACdtK,EAAGoM,wBAAwB5B,GAC3BxK,EAAGqM,UAAU3B,EAA6ByB,GAC1CnM,EAAGsM,aAAatM,EAAGuM,aAAc,EAAGvM,EAAG8C,cAAe,GAEtD9C,EAAG8L,gBAAgB9L,EAAG+L,YAAa,MACnC/L,EAAGuK,WAAWF,GACdrK,EAAGqM,UAAUzB,EAAqBsB,GAClClM,EAAGwM,UAAU3B,EAAoB7K,EAAGgF,OAAOxD,MAAOxB,EAAGgF,OAAOvD,QAC5DzB,EAAGsM,aAAatM,EAAGuM,aAAc,EAAGvM,EAAG8C,cAAe,GAEtDoJ,EAAiBC,KCzIRM,EAAb,SAAAzI,GACE,SAAAyI,EAAYxI,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoI,IACjBvI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsI,GAAAjI,KAAAH,KAAMJ,KAEDQ,UAAYC,IAAMC,YAHNT,EADrB,OAAAC,OAAAS,EAAA,EAAAT,CAAAsI,EAAAzI,GAAAG,OAAAU,EAAA,EAAAV,CAAAsI,EAAA,EAAA3H,IAAA,oBAAAC,MAAA,WAOsB,IAAA0D,EAAApE,KAAAwD,EACcxD,KAAKJ,MAA7BiB,EADU2C,EACV3C,KAAM1D,EADIqG,EACJrG,MAAOC,EADHoG,EACGpG,OACbiL,EAAcC,EAAoBtI,KAAKI,UAAUQ,QAASC,EAAM,CACtE1D,QACAC,WAFMiL,UAURpD,sBANa,SAAPC,IACJ/I,QAAQgJ,KAAK,QACbkD,IACAjE,EAAKgB,kBAAoBH,sBAAsBC,GAC/C/I,QAAQkJ,QAAQ,YAjBtB,CAAA5E,IAAA,uBAAAC,MAAA,WAuBIvE,QAAQ+G,IAAI,oCAAqClD,KAAKoF,mBACtDE,qBAAqBtF,KAAKoF,qBAxB9B,CAAA3E,IAAA,SAAAC,MAAA,WA2BW,IAAA6H,EACmBvI,KAAKJ,MAAvBzC,EADDoL,EACCpL,MAAOC,EADRmL,EACQnL,OACf,OACE6B,EAAAC,EAAAC,cAAA,UACEhC,MAAOA,EACPC,OAAQA,EACRsE,IAAK1B,KAAKI,UACVe,MAAO,CAAEhE,MAAK,GAAAqL,OAAKrL,EAAL,MAAgBC,OAAM,GAAAoL,OAAKpL,EAAL,aAlC5CgL,EAAA,CAAmC/H,IAAMsB,WAwCzCyG,EAAcxG,aAAe,CAC3BzE,MAAO,IACPC,OAAQ,SAGJqL,aACJ,SAAAA,EAAY9M,EAAZqB,GAAmC,IAAjBG,EAAiBH,EAAjBG,MAAOC,EAAUJ,EAAVI,OAAU0C,OAAAC,EAAA,EAAAD,CAAAE,KAAAyI,GACjCzI,KAAKqD,OAAS,EAId,IAHA,IAAMxB,EAAW,GACX6G,EAAU,GACVC,EAAO5L,EAAY,CAAEI,QAAOC,WACzBwL,EAAM,EAAGA,EAAM,EAAGA,IAAO,CAChC,IAAM3K,EAAQ2K,EAAM,EAAID,EAAOhL,EAAW,CAAER,QAAOC,WAC7Ce,EAAUJ,EAAcpC,EAAIA,EAAE,UAAA6M,OAAWI,IAAQ3K,EAAO,CAC5Dd,QACAC,WAEIC,EAAS1B,EAAG6L,oBAClB7L,EAAG8L,gBAAgB9L,EAAG+L,YAAarK,GACnC1B,EAAGgM,qBACDhM,EAAG+L,YACH/L,EAAGiM,kBACHjM,EAAG2C,WACHH,EACA,GAEF0D,EAASgH,KAAK1K,GACduK,EAAQG,KAAKxL,GAEf2C,KAAK6B,SAAW,CACdiH,SAAUjH,EAASkH,MAAM,EAAG,GAC5BC,SAAUnH,EAASkH,MAAM,IAE3B/I,KAAK0I,QAAU,CACbI,SAAU,CAACJ,EAAQ,GAAIA,EAAQ,IAC/BM,SAAU,CAACN,EAAQ,GAAIA,EAAQ,KAEjCvM,QAAQ+G,IAAIlD,KAAK6B,SAAU7B,KAAK0I,4DAIhC1I,KAAKqD,OAAS,EAAIrD,KAAKqD,yDAIvB,OAAuB,IAAhBrD,KAAKqD,OAAe,EAAI,oDAI/B,OAAuB,IAAhBrD,KAAKqD,OAAe,EAAI,oDAI/B,OAAuB,IAAhBrD,KAAKqD,OAAe,EAAI,oDAI/B,OAAuB,IAAhBrD,KAAKqD,OAAe,EAAI,gDAI/B,OAAOrD,KAAK0I,QAAQM,SAAShJ,KAAKqD,sDAIlC,OAAOrD,KAAK0I,QAAQI,SAAS9I,KAAKqD,iBAIhCiF,EAAsB,SAAC9C,EAAU3E,EAAXjD,GAAuC,IAApBT,EAAoBS,EAApBT,MAAOC,EAAaQ,EAAbR,OAC9CzB,EAAK6J,EAASC,WAAW,SAEzB7J,EAAeU,EACnBX,EACAA,EAAG+J,cACH,kFAEIuD,EAAoB3M,EACxBX,EACAA,EAAGiK,gBACH/E,EAAKgF,eAEDqD,EAAqB5M,EACzBX,EACAA,EAAGiK,gBACH/E,EAAKsI,gBAEDC,EAAqB9M,EACzBX,EACAA,EAAGiK,gBACH/E,EAAKwI,gBAGDC,EAAe5N,EAAcC,EAAIC,EAAcsN,GAC/CK,EAAe7N,EAAcC,EAAIC,EAAcwN,GAC/CpD,EAActK,EAAcC,EAAIC,EAAcqN,GACpDtN,EAAGuK,WAAWoD,GAEd,IAAME,EAAuB7N,EAAGyK,kBAAkBkD,EAAc,SAC1DG,EAAuB9N,EAAGyK,kBAAkBmD,EAAc,SAE1DG,EAAmB,CACvB/N,EAAG2K,mBAAmBgD,EAAc,oBACpC3N,EAAG2K,mBAAmBgD,EAAc,oBACpC3N,EAAG2K,mBAAmBgD,EAAc,QACpC3N,EAAG2K,mBAAmBgD,EAAc,WAGhCK,EAAmB,CACvBhO,EAAG2K,mBAAmBiD,EAAc,oBACpC5N,EAAG2K,mBAAmBiD,EAAc,mBACpC5N,EAAG2K,mBAAmBiD,EAAc,SAGhCK,EAAkB,CACtBjO,EAAG2K,mBAAmBN,EAAa,SACnCrK,EAAG2K,mBAAmBN,EAAa,SAG/BS,EAAe9K,EAAG+K,eACxB/K,EAAGgL,WAAWhL,EAAGiL,aAAcH,GAC/B9K,EAAGkL,WACDlL,EAAGiL,aACH,IAAIE,aAAa,EAAE,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,IAC3CnL,EAAGoL,aAMLpL,EAAGqL,oBAAoBwC,EAAsB,EAAG7N,EAAGsL,OAAO,EAAO,EAAG,GAEpE,IAAMC,EAAgBvL,EAAG+K,eACzB/K,EAAGgL,WAAWhL,EAAGwL,qBAAsBD,GACvCvL,EAAGkL,WACDlL,EAAGwL,qBACH,IAAIzJ,WAAW,CAAC,EAAG,EAAG,EAAG,IACzB/B,EAAGoL,aAGL,IAAM8C,EAAW,IAAIpB,EAAS9M,EAAI,CAAEwB,QAAOC,WAqC3C,MAAO,CAAEyM,WAAUxB,UApCD,WAChBlM,QAAQgJ,KAAK,SAEbhJ,QAAQgJ,KAAK,mBACbxJ,EAAG8L,gBAAgB9L,EAAG+L,YAAamC,EAASC,uBAC5CnO,EAAGuK,WAAWoD,GACd3N,EAAGoM,wBAAwByB,GAC3B7N,EAAGqM,UAAU0B,EAAiB,GAAIG,EAASE,2BAC3CpO,EAAGqM,UAAU0B,EAAiB,GAAIG,EAASG,2BAC3CrO,EAAGwM,UAAUuB,EAAiB,GAAI/N,EAAGgF,OAAOxD,MAAOxB,EAAGgF,OAAOvD,QAC7DzB,EAAGsO,UAAUP,EAAiB,GAAIQ,YAAYC,MAAQ,KACtDxO,EAAGsM,aAAatM,EAAGuM,aAAc,EAAGvM,EAAG8C,cAAe,GACtDtC,QAAQkJ,QAAQ,mBAEhBlJ,QAAQgJ,KAAK,mBACbxJ,EAAG8L,gBAAgB9L,EAAG+L,YAAamC,EAASO,uBAC5CzO,EAAGuK,WAAWqD,GACd5N,EAAGoM,wBAAwB0B,GAC3B9N,EAAGqM,UAAU2B,EAAiB,GAAIE,EAASE,2BAC3CpO,EAAGqM,UAAU2B,EAAiB,GAAIE,EAASQ,2BAC3C1O,EAAGwM,UAAUwB,EAAiB,GAAIhO,EAAGgF,OAAOxD,MAAOxB,EAAGgF,OAAOvD,QAC7DzB,EAAGsM,aAAatM,EAAGuM,aAAc,EAAGvM,EAAG8C,cAAe,GACtDtC,QAAQkJ,QAAQ,mBAEhBlJ,QAAQgJ,KAAK,kBACbxJ,EAAG8L,gBAAgB9L,EAAG+L,YAAa,MACnC/L,EAAGuK,WAAWF,GAEdrK,EAAGqM,UAAU4B,EAAgB,GAAIC,EAASS,2BAC1C3O,EAAGwM,UAAUyB,EAAgB,GAAIjO,EAAGgF,OAAOxD,MAAOxB,EAAGgF,OAAOvD,QAC5DzB,EAAGsM,aAAatM,EAAGuM,aAAc,EAAGvM,EAAG8C,cAAe,GACtDtC,QAAQkJ,QAAQ,kBAEhBwE,EAASU,OACTpO,QAAQkJ,QAAQ,YCpMd3J,GA3BwB2E,IAAMsB,UA2Bd,SAAChG,EAAIC,EAAcC,GACvC,IAAMC,EAAUH,EAAGD,gBAOnB,OANAC,EAAGI,aAAaD,EAASF,GACzBD,EAAGI,aAAaD,EAASD,GACzBF,EAAGK,YAAYF,GACVH,EAAGM,oBAAoBH,EAASH,EAAGO,cACtCC,QAAQC,MAAM,wBAAyBT,EAAGU,kBAAkBP,IAEvDA,IAGHQ,EAAe,SAACX,EAAIY,EAAMC,GAC9B,IAAMC,EAAId,EAAGW,aAAaC,GAW1B,OAVAZ,EAAGe,aAAaD,EAAGD,GACnBb,EAAGgB,cAAcF,GACZd,EAAGiB,mBAAmBH,EAAGd,EAAGkB,iBAC/BV,QAAQC,MACN,2BACAG,EACAC,EACAb,EAAGmB,iBAAiBL,IAGjBA,GAGHsB,EAAgB,SAACpC,EAAIqC,EAAaC,GACtC,IAAME,EAAUxC,EAAGoC,gBAiBnB,OAhBApC,EAAGyC,cAAcJ,GACjBrC,EAAG0C,YAAY1C,EAAG2C,WAAYH,GAC9BxC,EAAG4C,WACD5C,EAAG2C,WACH,EACA3C,EAAG6C,IACH,GACA,GACA,EACA7C,EAAG6C,IACH7C,EAAG8C,cACHR,GAEFtC,EAAG+C,cAAc/C,EAAG2C,WAAY3C,EAAGgD,mBAAoBhD,EAAGiD,SAC1DjD,EAAG+C,cAAc/C,EAAG2C,WAAY3C,EAAGkD,mBAAoBlD,EAAGiD,SAC1DjD,EAAGmD,eAAenD,EAAG2C,YACdH,GAGT,SAASqM,EAAUvN,EAAKC,GACtB,OAAOK,KAAKC,MAAMD,KAAKE,UAAYP,EAAMD,EAAM,IAAMA,EAEvD,ICtEIwN,EDsEE1N,EAAc,WAElB,IADA,IAAIM,EAAS,GACJC,EAAI,EAAGA,EAAI,GAAIA,IACtB,IAAK,IAAIoN,EAAI,EAAGA,EAAI,GAAIA,IACtBrN,EAASA,EAAOmL,OAAO,CACrBgC,EAAU,EAAG,KACbA,EAAU,EAAG,KACbA,EAAU,EAAG,OAInB,OAAO,IAAI9M,WAAWL,IAElBM,EAAa,WAEjB,IADA,IAAIN,EAAS,GACJC,EAAI,EAAGA,EAAI,GAAIA,IACtB,IAAK,IAAIoN,EAAI,EAAGA,EAAI,GAAIA,IACtBrN,EAASA,EAAOmL,OAAO,CAAC,EAAG,EAAG,IAGlC,OAAO,IAAI9K,WAAWL,IAElBoL,aACJ,SAAAA,EAAY9M,GAAKmE,OAAAC,EAAA,EAAAD,CAAAE,KAAAyI,GACfzI,KAAKqD,OAAS,EAGd,IAFA,IAAMxB,EAAW,GACX6G,EAAU,GACPE,EAAM,EAAGA,EAAM,EAAGA,IAAO,CAChC,IAAM3K,EAAQ2K,EAAM,EAAI7L,IAAgBY,IAClCQ,EAAUJ,EAAcpC,EAAIA,EAAE,UAAA6M,OAAWI,IAAQ3K,GACjDZ,EAAS1B,EAAG6L,oBAClB7L,EAAG8L,gBAAgB9L,EAAG+L,YAAarK,GACnC1B,EAAGgM,qBACDhM,EAAG+L,YACH/L,EAAGiM,kBACHjM,EAAG2C,WACHH,EACA,GAEF0D,EAASgH,KAAK1K,GACduK,EAAQG,KAAKxL,GAEf2C,KAAK6B,SAAW,CACdiH,SAAUjH,EAASkH,MAAM,EAAG,GAC5BC,SAAUnH,EAASkH,MAAM,IAE3B/I,KAAK0I,QAAU,CACbI,SAAU,CAACJ,EAAQ,GAAIA,EAAQ,IAC/BM,SAAU,CAACN,EAAQ,GAAIA,EAAQ,wDAKjC1I,KAAKqD,OAAS,EAAIrD,KAAKqD,yDAIvB,OAAuB,IAAhBrD,KAAKqD,OAAe,EAAI,oDAI/B,OAAuB,IAAhBrD,KAAKqD,OAAe,EAAI,oDAI/B,OAAuB,IAAhBrD,KAAKqD,OAAe,EAAI,oDAI/B,OAAuB,IAAhBrD,KAAKqD,OAAe,EAAI,gDAI/B,OAAOrD,KAAK0I,QAAQM,SAAShJ,KAAKqD,sDAIlC,OAAOrD,KAAK0I,QAAQI,SAAS9I,KAAKqD,iBAIhCiF,EAAsB,SAAC9C,EAAU3E,GACrC,IAAMiE,EAAgB,IAAIR,MAC1BQ,EAAcH,OAAS,WACrB,IAAMhJ,EAAK6J,EAASC,WAAW,SAEzB7J,EAAeU,EACnBX,EACAA,EAAG+J,cACH,kFAEIuD,EAAoB3M,EACxBX,EACAA,EAAGiK,gBACH/E,EAAKgF,eAEDqD,EAAqB5M,EACzBX,EACAA,EAAGiK,gBACH/E,EAAKsI,gBAEDC,EAAqB9M,EACzBX,EACAA,EAAGiK,gBACH/E,EAAKwI,gBAGDC,EAAe5N,EAAcC,EAAIC,EAAcsN,GAC/CK,EAAe7N,EAAcC,EAAIC,EAAcwN,GAC/CpD,EAActK,EAAcC,EAAIC,EAAcqN,GAEpDtN,EAAGuK,WAAWoD,GAEd,IAAME,EAAuB7N,EAAGyK,kBAAkBkD,EAAc,SAC1DG,EAAuB9N,EAAGyK,kBAAkBmD,EAAc,SAE1DG,EAAmB,CACvB/N,EAAG2K,mBAAmBgD,EAAc,oBACpC3N,EAAG2K,mBAAmBgD,EAAc,qBAGhCK,EAAmB,CACvBhO,EAAG2K,mBAAmBiD,EAAc,oBACpC5N,EAAG2K,mBAAmBiD,EAAc,oBAIhChD,GADsB5K,EAAGyK,kBAAkBJ,EAAa,SAClCrK,EAAG2K,mBAAmBN,EAAa,UAEzDS,EAAe9K,EAAG+K,eACxB/K,EAAGgL,WAAWhL,EAAGiL,aAAcH,GAC/B9K,EAAGkL,WACDlL,EAAGiL,aACH,IAAIE,aAAa,EAAE,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,IAC3CnL,EAAGoL,aAMLpL,EAAGqL,oBAAoBwC,EAAsB,EAAG7N,EAAGsL,OAAO,EAAO,EAAG,GAEpE,IAAMC,EAAgBvL,EAAG+K,eACzB/K,EAAGgL,WAAWhL,EAAGwL,qBAAsBD,GACvCvL,EAAGkL,WACDlL,EAAGwL,qBACH,IAAIzJ,WAAW,CAAC,EAAG,EAAG,EAAG,IACzB/B,EAAGoL,aAGL,IAAM8C,EAAW,IAAIpB,EAAS9M,EAAImJ,GAClC3C,OAAOwI,YAAY,WACjBhP,EAAG8L,gBAAgB9L,EAAG+L,YAAamC,EAASC,uBAC5CnO,EAAGuK,WAAWoD,GACd3N,EAAGoM,wBAAwByB,GAC3B7N,EAAGqM,UAAU0B,EAAiB,GAAIG,EAASE,2BAC3CpO,EAAGqM,UAAU0B,EAAiB,GAAIG,EAASG,2BAC3CrO,EAAGsM,aAAatM,EAAGuM,aAAc,EAAGvM,EAAG8C,cAAe,GAEtD9C,EAAG8L,gBAAgB9L,EAAG+L,YAAamC,EAASO,uBAC5CzO,EAAGuK,WAAWqD,GACd5N,EAAGoM,wBAAwB0B,GAC3B9N,EAAGqM,UAAU2B,EAAiB,GAAIE,EAASE,2BAC3CpO,EAAGqM,UAAU2B,EAAiB,GAAIE,EAASQ,2BAC3C1O,EAAGsM,aAAatM,EAAGuM,aAAc,EAAGvM,EAAG8C,cAAe,GAEtD9C,EAAG8L,gBAAgB9L,EAAG+L,YAAa,MACnC/L,EAAGuK,WAAWF,GACdrK,EAAGqM,UAAUzB,EAAqBsD,EAASS,2BAC3C3O,EAAGsM,aAAatM,EAAGuM,aAAc,EAAGvM,EAAG8C,cAAe,GAEtDoL,EAASU,QACR,MAGLzF,EAActI,IAAM,qCEpNPoO,mLAnCJ,IACCC,EAAY7K,KAAKJ,MAAjBiL,QACR,OACE5L,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2L,EAAD,CACEjI,KAAK,aACLD,OAAO,wBACP/B,KAAM,CAAEhF,eAAgBgP,EAAQ,2BAElC5L,EAAAC,EAAAC,cAAC2L,EAAD,CACEjI,KAAK,aACLD,OAAO,qCACP/B,KAAM,CACJgF,cAAegF,EAAQ,qBACvB9E,WAAY8E,EAAQ,wCAEtBpH,QAAS,SAAA7D,GAAK,OAAIX,EAAAC,EAAAC,cAAC4L,EAAenL,IAClC8D,KAAM,kBAAM,QAEdzE,EAAAC,EAAAC,cAAC2L,EAAD,CACEjI,KAAK,uBACLD,OAAO,2CACP/B,KAAM,CACJgF,cAAegF,EAAQ,qBACvB1B,eAAgB0B,EAAQ,qCACxBxB,eAAgBwB,EAAQ,sCAE1BpH,QAAS,SAAA7D,GAAK,OAAIX,EAAAC,EAAAC,cAAC6L,EAAkBpL,IACrC8D,KAAM,kBAAM,gBA7BJ/B,8BDJlB,SAASsJ,IAEP,OAAIA,EAAUC,MAAcD,EAAUC,OACtCD,EAAUC,MAAQ,IAAIC,IACfF,EAAUC,OAIZ,IEDDE,EAAiB,CAAC,WAAY,YAC9BC,EAFW,CAAC,wBAGfC,IAAI,SAAAC,GAAI,OAAIH,EAAeE,IAAI,SAAAE,GAAO,SAAAhD,OAAO+C,GAAP/C,OAAcgD,EAAd,aACtCC,OAAO,SAACC,EAAKb,GAAN,OAAkBa,EAAIlD,OAAOqC,IAAU,IAE3Cc,EAAW,CACf,uBACA,oBACA,uCAECnD,OAAO6C,GACPC,IAAI,SAAAM,GAAI,OACPC,MAAMD,GACH/G,KAAK,SAAAiH,GAAQ,OAAIA,EAASC,SAC1BlH,KAAK,SAAAmH,GAAY,OAAAlM,OAAAmM,EAAA,EAAAnM,CAAA,GAAQ8L,EAAOI,QFbT,SAAAE,GAC5B,IAAMhB,EAAQD,IACViB,IAAYzB,GACd0B,SAASC,KAAKC,YAAYnB,EAAMoB,KAChCpB,EAAMoB,IAAInL,MAAMoL,MAAQ,EACxBrB,EAAMoB,IAAInL,MAAMqL,KAAO,KACvB/B,EAAQxF,sBAAsB,SAASwH,IACrCvB,EAAMwB,SACNjC,EAAQxF,sBAAsBwH,OAEtBP,GAAWzB,IACrBnF,qBAAqBmF,GACrBA,OAAQkC,EACRR,SAASC,KAAKQ,YAAY1B,EAAMoB,MEGpCO,EAAe,GAEfrI,QAAQsI,IAAInB,GAAU9G,KAAK,SAAAgG,GACzBkC,IAASC,OACP/N,EAAAC,EAAAC,cAAC8N,EAAD,CAAKpC,QAAS/K,OAAOwC,OAAPP,MAAAjC,OAAM,CAAQ,IAAR0I,OAAA1I,OAAAoN,EAAA,EAAApN,CAAe+K,OACnCsB,SAASgB,eAAe","file":"static/js/main.c4d0d703.chunk.js","sourcesContent":["export const DEFAULT_VERTEX_SHADER = `\n#ifdef GL_ES\nprecision mediump float;\n#endif\nattribute vec2 a_position;\nattribute vec2 a_texcoord;\nvarying vec2 v_texcoord;\nvoid main() {\n    gl_Position = vec4(a_position, 0.0, 1.0);\n    v_texcoord = a_texcoord;\n}\n`;\n\nexport const createProgram = (gl, vertexShader, fragmentShader) => {\n  const program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n  gl.linkProgram(program);\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    console.error(\"Error linking program\", gl.getProgramInfoLog(program));\n  }\n  return program;\n};\n\nexport const createShader = (gl, type, src) => {\n  const s = gl.createShader(type);\n  gl.shaderSource(s, src);\n  gl.compileShader(s);\n  if (!gl.getShaderParameter(s, gl.COMPILE_STATUS)) {\n    console.error(\n      \"Could not compile shader\",\n      type,\n      src,\n      gl.getShaderInfoLog(s)\n    );\n  }\n  return s;\n};\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nexport const randomImage = ({ width, height }) => {\n  let buffer = [];\n  for (let i = 0; i < width * height * 3; i++) {\n    buffer[i] = randomInt(0, 255);\n  }\n  return new Uint8Array(buffer);\n};\nexport const blankImage = ({ width, height }) => {\n  let buffer = new Uint8Array(3 * width * height);\n  buffer.fill(0, 0, buffer.length);\n  return buffer;\n};\n\nexport const loadImage = src => {\n  const img = new Image();\n  const promise = new Promise((resolve, reject) => {\n    img.onload = () => {\n      resolve(img);\n    };\n  });\n  img.src = src;\n  return promise;\n};\n\nexport const createTexture = (gl, textureUnit, image, { width, height }) => {\n  const texture = gl.createTexture();\n  gl.activeTexture(textureUnit);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    0,\n    gl.RGB,\n    width,\n    height,\n    0,\n    gl.RGB,\n    gl.UNSIGNED_BYTE,\n    image\n  );\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.generateMipmap(gl.TEXTURE_2D);\n  return texture;\n};\n","import React from \"react\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\n\nexport const FadeIn = ({ children }) => (\n  <ReactCSSTransitionGroup\n    transitionName=\"fade\"\n    transitionAppear={true}\n    transitionAppearTimeout={500}\n    transitionEnter={false}\n    transitionLeave={false}\n  >\n    {children}\n  </ReactCSSTransitionGroup>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport webglCanvas from \"glslCanvas\";\n\nimport { DEFAULT_VERTEX_SHADER } from \"../utils\";\nimport { FadeIn } from \"./FadeIn\";\n\nexport class GlslCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  initCanvas() {\n    const canvas = this.canvasRef.current;\n    const { fragmentShader } = this.props.code;\n    const { width, height } = this.props.display;\n    this.glslCanvas = new webglCanvas(canvas);\n    this.glslCanvas.load(fragmentShader);\n    canvas.style.width = width;\n    canvas.style.height = height;\n  }\n\n  componentDidMount() {\n    this.initCanvas();\n  }\n\n  render() {\n    const { width, height } = this.props.display;\n    const { fragmentShader, vertexShader } = this.props.code;\n    return (\n      <FadeIn>\n        <canvas\n          width={width}\n          height={height}\n          data-fragment={fragmentShader}\n          data-vertex={vertexShader}\n          ref={this.canvasRef}\n        />\n      </FadeIn>\n    );\n  }\n}\nGlslCanvas.propTypes = {\n  code: PropTypes.shape({\n    fragmentShader: PropTypes.string.isRequired,\n    vertexShader: PropTypes.string,\n    textures: PropTypes.arrayOf(PropTypes.string)\n  })\n};\nGlslCanvas.defaultProps = {\n  code: {\n    vertexShader: DEFAULT_VERTEX_SHADER,\n    textures: []\n  }\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport { GlslCanvas } from \"./GlslCanvas\";\n\nexport class GlslModal extends React.Component {\n  render() {\n    const { onClick } = this.props;\n    const { fullscreen } = this.props.display;\n    const display = {};\n    if (fullscreen === \"square\") {\n      display.width = window.innerHeight - 100 + \"px\";\n      display.height = window.innerHeight - 100 + \"px\";\n    } else if (fullscreen === \"fill\") {\n      display.width = \"100%\";\n      display.height = \"100%\";\n    }\n    const modalProps = Object.assign({}, this.props, { display });\n    const cssClasses = classNames(\"gallery-modal\", fullscreen);\n    return (\n      <div className={cssClasses} onClick={onClick}>\n        <GlslCanvas {...modalProps} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport { FadeIn } from \"./FadeIn\";\n\nexport const Thumbnail = ({ imgSrc, name, width, height }) => (\n  <FadeIn>\n    <img src={imgSrc} alt={name} width={width} height={height} />\n  </FadeIn>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GlslCanvas } from \"./GlslCanvas\";\nimport { GlslModal } from \"./GlslModal\";\nimport { Thumbnail } from \"./Thumbnail\";\n\nexport class GalleryItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { active: false };\n  }\n\n  handleClick = e => {\n    console.log(\"click\", this.state);\n    const { fullscreen } = this.state;\n    this.setState({ fullscreen: !fullscreen, active: false });\n  };\n\n  handleMouseEnter = e => {\n    console.log(\"enter\");\n    this.setState({ active: true });\n  };\n\n  handleMouseLeave = e => {\n    console.log(\"leave\");\n    this.setState({ active: false });\n  };\n\n  render() {\n    const { name, imgSrc, preview, full } = this.props;\n    const { width, height } = this.props.display;\n    const { active, fullscreen } = this.state;\n    const { author } = this.props.attribution;\n    const item = (\n      <div\n        className=\"gallery-item\"\n        width={width}\n        height={height}\n        onClick={this.handleClick}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n      >\n        {active ? (\n          preview(this.props)\n        ) : (\n          <Thumbnail\n            imgSrc={imgSrc}\n            name={name}\n            width={width}\n            height={height}\n          />\n        )}\n        <div className=\"credits\">\n          <p className=\"author label\">{author}</p>\n          <p className=\"title label\">{name}</p>\n        </div>\n      </div>\n    );\n    return fullscreen ? (\n      <span>\n        {full(this.props, this.handleClick)}\n        {item}\n      </span>\n    ) : (\n      item\n    );\n  }\n}\n\nGalleryItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  imgSrc: PropTypes.string.isRequired,\n  display: PropTypes.shape({\n    width: PropTypes.string,\n    height: PropTypes.string,\n    fullscreen: PropTypes.oneOf([\"fill\", \"square\"])\n  }),\n  attribution: PropTypes.shape({\n    author: PropTypes.string,\n    date: PropTypes.instanceOf(Date),\n    credits: PropTypes.string,\n    link: PropTypes.string\n  })\n};\n\nGalleryItem.defaultProps = {\n  display: {\n    width: \"256px\",\n    height: \"256px\",\n    fullscreen: \"square\"\n  },\n  attribution: {},\n  preview: props => <GlslCanvas {...props} />,\n  full: (props, onClick) => <GlslModal {...props} onClick={onClick} />\n};\n","import React from \"react\";\nimport { createProgram, createShader, loadImage } from \"../../utils\";\n\nexport class GameOfLife extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { code } = this.props;\n    const canvas = this.canvasRef.current;\n    loadImage(\"frag/game-of-life/start-state.png\").then(startStateImg => {\n      const { animate } = createGameOfLife(canvas, code, startStateImg);\n      const step = () => {\n        console.time(\"step\");\n        animate();\n        this.animationFrameReq = requestAnimationFrame(step);\n        console.timeEnd(\"step\");\n      };\n      requestAnimationFrame(step);\n    });\n  }\n\n  componentWillUnmount() {\n    console.log(\"Clearing animation frame request \", this.animationFrameReq);\n    cancelAnimationFrame(this.animationFrameReq);\n  }\n\n  render() {\n    const { fragmentShader, vertexShader } = this.props.code;\n    return (\n      <canvas\n        width=\"64\"\n        height=\"64\"\n        data-fragment={fragmentShader}\n        data-vertex={vertexShader}\n        ref={this.canvasRef}\n        style={{ width: \"256px\", height: \"256px\", imageRendering: \"pixelated\" }}\n      />\n    );\n  }\n}\n\nconst createTexture = (gl, activeTexture, image) => {\n  const texture = gl.createTexture();\n  gl.activeTexture(activeTexture);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.generateMipmap(gl.TEXTURE_2D);\n  return texture;\n};\n\nconst createGameOfLife = (canvasEl, code, startStateImg) => {\n  const gl = canvasEl.getContext(\"webgl\");\n\n  const vertexShader = createShader(\n    gl,\n    gl.VERTEX_SHADER,\n    \"attribute vec2 coord; void main(void) { gl_Position = vec4(coord, 0.0, 1.0); }\"\n  );\n  const fragShaderDisplay = createShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    code.displayShader\n  );\n  const fragShaderStepper = createShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    code.stepShader\n  );\n\n  const displayProg = createProgram(gl, vertexShader, fragShaderDisplay);\n  const stepperProg = createProgram(gl, vertexShader, fragShaderStepper);\n\n  gl.useProgram(stepperProg);\n\n  const stepperProgCoordLoc = gl.getAttribLocation(stepperProg, \"coord\");\n  const stepperProgPreviousStateLoc = gl.getUniformLocation(\n    stepperProg,\n    \"previousState\"\n  );\n\n  const displayProgStateLoc = gl.getUniformLocation(displayProg, \"state\");\n  const displayProgSizeLoc = gl.getUniformLocation(displayProg, \"size\");\n  const vertexBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n  gl.bufferData(\n    gl.ARRAY_BUFFER,\n    new Float32Array([-1, -1, 1, -1, 1, 1, -1, 1]),\n    gl.STATIC_DRAW\n  );\n\n  // Note we must bind ARRAY_BUFFER before running vertexAttribPointer!\n  // This is confusing and deserves a blog post\n  // https://stackoverflow.com/questions/7617668/glvertexattribpointer-needed-everytime-glbindbuffer-is-called\n  gl.vertexAttribPointer(stepperProgCoordLoc, 2, gl.FLOAT, false, 0, 0);\n\n  const elementBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n  gl.bufferData(\n    gl.ELEMENT_ARRAY_BUFFER,\n    new Uint8Array([0, 1, 2, 3]),\n    gl.STATIC_DRAW\n  );\n\n  const texture0 = createTexture(gl, gl.TEXTURE0, startStateImg);\n  const texture1 = createTexture(gl, gl.TEXTURE0 + 1, startStateImg);\n\n  const framebuffers = [gl.createFramebuffer(), gl.createFramebuffer()];\n\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffers[0]);\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER,\n    gl.COLOR_ATTACHMENT0,\n    gl.TEXTURE_2D,\n    texture0,\n    0\n  );\n\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffers[1]);\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER,\n    gl.COLOR_ATTACHMENT0,\n    gl.TEXTURE_2D,\n    texture1,\n    0\n  );\n\n  let nextStateIndex = 0;\n  const animate = function animate() {\n    const previousStateIndex = 1 - nextStateIndex;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffers[nextStateIndex]);\n    gl.useProgram(stepperProg);\n    gl.enableVertexAttribArray(stepperProgCoordLoc);\n    gl.uniform1i(stepperProgPreviousStateLoc, previousStateIndex);\n    gl.drawElements(gl.TRIANGLE_FAN, 4, gl.UNSIGNED_BYTE, 0);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.useProgram(displayProg);\n    gl.uniform1i(displayProgStateLoc, nextStateIndex);\n    gl.uniform2f(displayProgSizeLoc, gl.canvas.width, gl.canvas.height);\n    gl.drawElements(gl.TRIANGLE_FAN, 4, gl.UNSIGNED_BYTE, 0);\n\n    nextStateIndex = previousStateIndex;\n  };\n  return { animate };\n};\n","import React from \"react\";\n\nimport {\n  createProgram,\n  createShader,\n  createTexture,\n  randomImage,\n  blankImage\n} from \"../../utils\";\n\nexport class ColorAutomata extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { code, width, height } = this.props;\n    const { nextFrame } = createColorAutomata(this.canvasRef.current, code, {\n      width,\n      height\n    });\n    const step = () => {\n      console.time(\"step\");\n      nextFrame();\n      this.animationFrameReq = requestAnimationFrame(step);\n      console.timeEnd(\"step\");\n    };\n    requestAnimationFrame(step);\n  }\n\n  componentWillUnmount() {\n    console.log(\"Clearing animation frame request \", this.animationFrameReq);\n    cancelAnimationFrame(this.animationFrameReq);\n  }\n\n  render() {\n    const { width, height } = this.props;\n    return (\n      <canvas\n        width={width}\n        height={height}\n        ref={this.canvasRef}\n        style={{ width: `${width}px`, height: `${height}px` }}\n      />\n    );\n  }\n}\n\nColorAutomata.defaultProps = {\n  width: 256,\n  height: 256\n};\n\nclass Automata {\n  constructor(gl, { width, height }) {\n    this.active = 1;\n    const textures = [];\n    const buffers = [];\n    const seed = randomImage({ width, height });\n    for (let idx = 0; idx < 4; idx++) {\n      const image = idx < 1 ? seed : blankImage({ width, height });\n      const texture = createTexture(gl, gl[`TEXTURE${idx}`], image, {\n        width,\n        height\n      });\n      const buffer = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, buffer);\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        texture,\n        0\n      );\n      textures.push(texture);\n      buffers.push(buffer);\n    }\n    this.textures = {\n      position: textures.slice(0, 2),\n      velocity: textures.slice(2)\n    };\n    this.buffers = {\n      position: [buffers[0], buffers[1]],\n      velocity: [buffers[2], buffers[3]]\n    };\n    console.log(this.textures, this.buffers);\n  }\n\n  swap() {\n    this.active = 1 - this.active;\n  }\n\n  nextVelocityTextureUnit() {\n    return this.active === 1 ? 3 : 2;\n  }\n\n  nextPositionTextureUnit() {\n    return this.active === 1 ? 1 : 0;\n  }\n\n  prevVelocityTextureUnit() {\n    return this.active === 1 ? 2 : 3;\n  }\n\n  prevPositionTextureUnit() {\n    return this.active === 1 ? 0 : 1;\n  }\n\n  velocityFrameBuffer() {\n    return this.buffers.velocity[this.active];\n  }\n\n  positionFrameBuffer() {\n    return this.buffers.position[this.active];\n  }\n}\n\nconst createColorAutomata = (canvasEl, code, { width, height }) => {\n  const gl = canvasEl.getContext(\"webgl\");\n\n  const vertexShader = createShader(\n    gl,\n    gl.VERTEX_SHADER,\n    \"attribute vec2 coord; void main(void) { gl_Position = vec4(coord, 0.0, 1.0); }\"\n  );\n  const displayFragShader = createShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    code.displayShader\n  );\n  const velocityFragShader = createShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    code.velocityShader\n  );\n  const positionFragShader = createShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    code.positionShader\n  );\n\n  const velocityProg = createProgram(gl, vertexShader, velocityFragShader);\n  const positionProg = createProgram(gl, vertexShader, positionFragShader);\n  const displayProg = createProgram(gl, vertexShader, displayFragShader);\n  gl.useProgram(velocityProg);\n\n  const velocityProgCoordLoc = gl.getAttribLocation(velocityProg, \"coord\");\n  const positionProgCoordLoc = gl.getAttribLocation(positionProg, \"coord\");\n\n  const velocityUniforms = [\n    gl.getUniformLocation(velocityProg, \"previousPosition\"),\n    gl.getUniformLocation(velocityProg, \"previousVelocity\"),\n    gl.getUniformLocation(velocityProg, \"size\"),\n    gl.getUniformLocation(velocityProg, \"u_time\")\n  ];\n\n  const positionUniforms = [\n    gl.getUniformLocation(positionProg, \"previousPosition\"),\n    gl.getUniformLocation(positionProg, \"currentVelocity\"),\n    gl.getUniformLocation(positionProg, \"size\")\n  ];\n\n  const displayUniforms = [\n    gl.getUniformLocation(displayProg, \"state\"),\n    gl.getUniformLocation(displayProg, \"size\")\n  ];\n\n  const vertexBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n  gl.bufferData(\n    gl.ARRAY_BUFFER,\n    new Float32Array([-1, -1, 1, -1, 1, 1, -1, 1]),\n    gl.STATIC_DRAW\n  );\n\n  // Note we must bind ARRAY_BUFFER before running vertexAttribPointer!\n  // This is confusing and deserves a blog post\n  // https://stackoverflow.com/questions/7617668/glvertexattribpointer-needed-everytime-glbindbuffer-is-called\n  gl.vertexAttribPointer(velocityProgCoordLoc, 2, gl.FLOAT, false, 0, 0);\n\n  const elementBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n  gl.bufferData(\n    gl.ELEMENT_ARRAY_BUFFER,\n    new Uint8Array([0, 1, 2, 3]),\n    gl.STATIC_DRAW\n  );\n\n  const automata = new Automata(gl, { width, height });\n  const nextFrame = function() {\n    console.time(\"frame\");\n\n    console.time(\"update velocity\");\n    gl.bindFramebuffer(gl.FRAMEBUFFER, automata.velocityFrameBuffer());\n    gl.useProgram(velocityProg);\n    gl.enableVertexAttribArray(velocityProgCoordLoc);\n    gl.uniform1i(velocityUniforms[0], automata.prevPositionTextureUnit());\n    gl.uniform1i(velocityUniforms[1], automata.prevVelocityTextureUnit());\n    gl.uniform2f(velocityUniforms[2], gl.canvas.width, gl.canvas.height);\n    gl.uniform1f(velocityUniforms[3], performance.now() / 1000);\n    gl.drawElements(gl.TRIANGLE_FAN, 4, gl.UNSIGNED_BYTE, 0);\n    console.timeEnd(\"update velocity\");\n\n    console.time(\"update position\");\n    gl.bindFramebuffer(gl.FRAMEBUFFER, automata.positionFrameBuffer());\n    gl.useProgram(positionProg);\n    gl.enableVertexAttribArray(positionProgCoordLoc);\n    gl.uniform1i(positionUniforms[0], automata.prevPositionTextureUnit());\n    gl.uniform1i(positionUniforms[1], automata.nextVelocityTextureUnit());\n    gl.uniform2f(positionUniforms[2], gl.canvas.width, gl.canvas.height);\n    gl.drawElements(gl.TRIANGLE_FAN, 4, gl.UNSIGNED_BYTE, 0);\n    console.timeEnd(\"update position\");\n\n    console.time(\"update display\");\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.useProgram(displayProg);\n\n    gl.uniform1i(displayUniforms[0], automata.nextPositionTextureUnit());\n    gl.uniform2f(displayUniforms[1], gl.canvas.width, gl.canvas.height);\n    gl.drawElements(gl.TRIANGLE_FAN, 4, gl.UNSIGNED_BYTE, 0);\n    console.timeEnd(\"update display\");\n\n    automata.swap();\n    console.timeEnd(\"frame\");\n  };\n  return { automata, nextFrame };\n};\n","import React from \"react\";\n\nexport class MazeFill extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { code } = this.props;\n    createColorAutomata(this.canvasRef.current, code);\n  }\n\n  render() {\n    const { fragmentShader, vertexShader } = this.props.code;\n    return (\n      <canvas\n        width=\"64\"\n        height=\"64\"\n        data-fragment={fragmentShader}\n        data-vertex={vertexShader}\n        ref={this.canvasRef}\n        style={{ width: \"256px\", height: \"256px\", imageRendering: \"pixelated\" }}\n      />\n    );\n  }\n}\n\nconst createProgram = (gl, vertexShader, fragmentShader) => {\n  const program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n  gl.linkProgram(program);\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    console.error(\"Error linking program\", gl.getProgramInfoLog(program));\n  }\n  return program;\n};\n\nconst createShader = (gl, type, src) => {\n  const s = gl.createShader(type);\n  gl.shaderSource(s, src);\n  gl.compileShader(s);\n  if (!gl.getShaderParameter(s, gl.COMPILE_STATUS)) {\n    console.error(\n      \"Could not compile shader\",\n      type,\n      src,\n      gl.getShaderInfoLog(s)\n    );\n  }\n  return s;\n};\n\nconst createTexture = (gl, textureUnit, image) => {\n  const texture = gl.createTexture();\n  gl.activeTexture(textureUnit);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    0,\n    gl.RGB,\n    64,\n    64,\n    0,\n    gl.RGB,\n    gl.UNSIGNED_BYTE,\n    image\n  );\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.generateMipmap(gl.TEXTURE_2D);\n  return texture;\n};\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nconst randomImage = () => {\n  let buffer = [];\n  for (let i = 0; i < 64; i++) {\n    for (let j = 0; j < 64; j++) {\n      buffer = buffer.concat([\n        randomInt(0, 255),\n        randomInt(0, 255),\n        randomInt(0, 255)\n      ]);\n    }\n  }\n  return new Uint8Array(buffer);\n};\nconst blankImage = () => {\n  let buffer = [];\n  for (let i = 0; i < 64; i++) {\n    for (let j = 0; j < 64; j++) {\n      buffer = buffer.concat([0, 0, 0]);\n    }\n  }\n  return new Uint8Array(buffer);\n};\nclass Automata {\n  constructor(gl) {\n    this.active = 0;\n    const textures = [];\n    const buffers = [];\n    for (let idx = 0; idx < 4; idx++) {\n      const image = idx < 2 ? randomImage() : blankImage();\n      const texture = createTexture(gl, gl[`TEXTURE${idx}`], image);\n      const buffer = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, buffer);\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        texture,\n        0\n      );\n      textures.push(texture);\n      buffers.push(buffer);\n    }\n    this.textures = {\n      position: textures.slice(0, 2),\n      velocity: textures.slice(2)\n    };\n    this.buffers = {\n      position: [buffers[0], buffers[1]],\n      velocity: [buffers[2], buffers[3]]\n    };\n  }\n\n  swap() {\n    this.active = 1 - this.active;\n  }\n\n  nextVelocityTextureUnit() {\n    return this.active === 1 ? 3 : 2;\n  }\n\n  nextPositionTextureUnit() {\n    return this.active === 1 ? 1 : 0;\n  }\n\n  prevVelocityTextureUnit() {\n    return this.active === 1 ? 2 : 3;\n  }\n\n  prevPositionTextureUnit() {\n    return this.active === 1 ? 0 : 1;\n  }\n\n  velocityFrameBuffer() {\n    return this.buffers.velocity[this.active];\n  }\n\n  positionFrameBuffer() {\n    return this.buffers.position[this.active];\n  }\n}\n\nconst createColorAutomata = (canvasEl, code) => {\n  const startStateImg = new Image();\n  startStateImg.onload = function() {\n    const gl = canvasEl.getContext(\"webgl\");\n\n    const vertexShader = createShader(\n      gl,\n      gl.VERTEX_SHADER,\n      \"attribute vec2 coord; void main(void) { gl_Position = vec4(coord, 0.0, 1.0); }\"\n    );\n    const displayFragShader = createShader(\n      gl,\n      gl.FRAGMENT_SHADER,\n      code.displayShader\n    );\n    const velocityFragShader = createShader(\n      gl,\n      gl.FRAGMENT_SHADER,\n      code.velocityShader\n    );\n    const positionFragShader = createShader(\n      gl,\n      gl.FRAGMENT_SHADER,\n      code.positionShader\n    );\n\n    const velocityProg = createProgram(gl, vertexShader, velocityFragShader);\n    const positionProg = createProgram(gl, vertexShader, positionFragShader);\n    const displayProg = createProgram(gl, vertexShader, displayFragShader);\n\n    gl.useProgram(velocityProg);\n\n    const velocityProgCoordLoc = gl.getAttribLocation(velocityProg, \"coord\");\n    const positionProgCoordLoc = gl.getAttribLocation(positionProg, \"coord\");\n\n    const velocityUniforms = [\n      gl.getUniformLocation(velocityProg, \"previousPosition\"),\n      gl.getUniformLocation(velocityProg, \"previousVelocity\")\n    ];\n\n    const positionUniforms = [\n      gl.getUniformLocation(positionProg, \"previousPosition\"),\n      gl.getUniformLocation(positionProg, \"currentVelocity\")\n    ];\n\n    const displayProgCoordLoc = gl.getAttribLocation(displayProg, \"coord\");\n    const displayProgStateLoc = gl.getUniformLocation(displayProg, \"state\");\n\n    const vertexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array([-1, -1, 1, -1, 1, 1, -1, 1]),\n      gl.STATIC_DRAW\n    );\n\n    // Note we must bind ARRAY_BUFFER before running vertexAttribPointer!\n    // This is confusing and deserves a blog post\n    // https://stackoverflow.com/questions/7617668/glvertexattribpointer-needed-everytime-glbindbuffer-is-called\n    gl.vertexAttribPointer(velocityProgCoordLoc, 2, gl.FLOAT, false, 0, 0);\n\n    const elementBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.bufferData(\n      gl.ELEMENT_ARRAY_BUFFER,\n      new Uint8Array([0, 1, 2, 3]),\n      gl.STATIC_DRAW\n    );\n\n    const automata = new Automata(gl, startStateImg);\n    window.setInterval(function() {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, automata.velocityFrameBuffer());\n      gl.useProgram(velocityProg);\n      gl.enableVertexAttribArray(velocityProgCoordLoc);\n      gl.uniform1i(velocityUniforms[0], automata.prevPositionTextureUnit());\n      gl.uniform1i(velocityUniforms[1], automata.prevVelocityTextureUnit());\n      gl.drawElements(gl.TRIANGLE_FAN, 4, gl.UNSIGNED_BYTE, 0);\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, automata.positionFrameBuffer());\n      gl.useProgram(positionProg);\n      gl.enableVertexAttribArray(positionProgCoordLoc);\n      gl.uniform1i(positionUniforms[0], automata.prevPositionTextureUnit());\n      gl.uniform1i(positionUniforms[1], automata.nextVelocityTextureUnit());\n      gl.drawElements(gl.TRIANGLE_FAN, 4, gl.UNSIGNED_BYTE, 0);\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.useProgram(displayProg);\n      gl.uniform1i(displayProgStateLoc, automata.nextPositionTextureUnit());\n      gl.drawElements(gl.TRIANGLE_FAN, 4, gl.UNSIGNED_BYTE, 0);\n\n      automata.swap();\n    }, 100);\n  };\n\n  startStateImg.src = \"frag/game-of-life/start-state.png\";\n};\n","import Stats from \"stats.js\";\n\nfunction makeStats() {\n  // poor man's run once\n  if (makeStats.stats) return makeStats.stats;\n  makeStats.stats = new Stats();\n  return makeStats.stats;\n}\n\nlet reqId;\nexport const showFpsCounter = enabled => {\n  const stats = makeStats();\n  if (enabled && !reqId) {\n    document.body.appendChild(stats.dom);\n    stats.dom.style.right = 0;\n    stats.dom.style.left = null;\n    reqId = requestAnimationFrame(function loop() {\n      stats.update();\n      reqId = requestAnimationFrame(loop);\n    });\n  } else if (!enabled && reqId) {\n    cancelAnimationFrame(reqId);\n    reqId = undefined;\n    document.body.removeChild(stats.dom);\n  }\n};\n","import React, { Component } from \"react\";\nimport { GalleryItem } from \"./components/GalleryItem\";\nimport { GameOfLife } from \"./components/gallery/GameOfLife\";\nimport { ColorAutomata } from \"./components/gallery/ColorAutomata\";\nimport { MazeFill } from \"./components/gallery/randoms/MazeFill\";\n\nclass App extends Component {\n  render() {\n    const { shaders } = this.props;\n    return (\n      <div>\n        <GalleryItem\n          name=\"256 colors\"\n          imgSrc=\"./frag/256-colors.png\"\n          code={{ fragmentShader: shaders[\"frag/256-colors.frag\"] }}\n        />\n        <GalleryItem\n          name=\"Glider gun\"\n          imgSrc=\"./frag/game-of-life/glider-gun.png\"\n          code={{\n            displayShader: shaders[\"frag/display.frag\"],\n            stepShader: shaders[\"frag/game-of-life/game-of-life.frag\"]\n          }}\n          preview={props => <GameOfLife {...props} />}\n          full={() => null}\n        />\n        <GalleryItem\n          name=\"Color Automata (WIP)\"\n          imgSrc=\"./frag/color-automata/color-automata.png\"\n          code={{\n            displayShader: shaders[\"frag/display.frag\"],\n            velocityShader: shaders[\"frag/color-automata/velocity.frag\"],\n            positionShader: shaders[\"frag/color-automata/position.frag\"]\n          }}\n          preview={props => <ColorAutomata {...props} />}\n          full={() => null}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport { showFpsCounter } from \"./stats\";\n\nconst automata = [\"frag/color-automata/\"];\nconst shaderVariants = [\"velocity\", \"position\"];\nconst automataShaders = automata\n  .map(path => shaderVariants.map(variant => `${path}${variant}.frag`))\n  .reduce((acc, shaders) => acc.concat(shaders), []);\n\nconst promises = [\n  \"frag/256-colors.frag\",\n  \"frag/display.frag\",\n  \"frag/game-of-life/game-of-life.frag\"\n]\n  .concat(automataShaders)\n  .map(frag =>\n    fetch(frag)\n      .then(response => response.text())\n      .then(responseText => ({ [frag]: responseText }))\n  );\n\nshowFpsCounter(true);\n\nPromise.all(promises).then(shaders => {\n  ReactDOM.render(\n    <App shaders={Object.assign({}, ...shaders)} />,\n    document.getElementById(\"root\")\n  );\n});\n"],"sourceRoot":""}